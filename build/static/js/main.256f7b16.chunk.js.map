{"version":3,"sources":["hooks/useLocalStorage.js","contexts/auth.jsx","contexts/common.jsx","contexts/products.jsx","contexts/cart.jsx","contexts/checkout.jsx","layouts/RouteWrapper.jsx","layouts/AuthLayout.jsx","components/Navbar.jsx","components/Footer.jsx","layouts/CommonLayout.jsx","components/core/form-controls/Input.jsx","graphql/auth.js","pages/auth.jsx","constants.js","constants/common.js","utils.js","components/Product.jsx","graphql/category.js","pages/home.jsx","components/QuickView.jsx","graphql/products.js","pages/products.jsx","pages/register.jsx","pages/checkout.jsx","components/core/form-controls/Select.jsx","components/core/form-controls/Textarea.jsx","graphql/upload.js","pages/createproduct.jsx","pages/createCategory.jsx","graphql/subCategory.js","pages/createSubCategory.jsx","components/core/Table.jsx","graphql/permissions.js","pages/permissions.jsx","pages/createPermission.jsx","pages/editPermission.jsx","graphql/roles.js","pages/createRole.jsx","pages/editRole.jsx","pages/roles.jsx","pages/editcategory.jsx","pages/editproduct.jsx","graphql/rolesMapping.js","pages/userRoles.jsx","pages/createUserRole.jsx","App.js","index.js"],"names":["useLocalStorage","key","initialValue","React","useState","item","window","localStorage","getItem","JSON","parse","error","console","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","initialState","isLoggedIn","user","isLoggingIn","AuthStateContext","createContext","AuthDispatchContext","reducer","state","action","type","payload","Error","signOut","dispatch","clear","AuthProvider","children","persistedUser","setPersistedUser","persistedUserState","_get","length","hasPermissions","permissions","allPermissions","context","roleDetails","reduce","result","concat","permissionsDetails","map","permission","name","some","prmsn","includes","useReducer","useEffect","Provider","isSearchBarOpen","searchKeyword","CommonStateContext","CommonDispatchContext","CommonProvider","products","isLoading","isLoaded","ProductsStateContext","ProductsDispatchContext","ProductsProvider","isCartOpen","items","CartStateContext","CartDispatchContext","id","cartItem","cartItems","quantity","filter","cartItemId","CartProvider","persistedCartItems","setPersistedCartItems","persistedCartState","CHECKOUT_STEPS","step","shippingAddress","CheckoutStateContext","CheckoutDispatchContext","setCheckoutStep","CheckoutProvider","checkoutState","setCheckoutState","persistedCheckoutState","RouteWrapper","Component","component","Layout","layout","isPrivate","rest","useContext","render","props","to","pathname","from","location","AuthLayout","className","src","alt","Header","navConfig","authState","history","useHistory","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","width","Toggle","Collapse","Nav","nav","showNav","path","title","onClick","e","preventDefault","push","reload","Footer","currentYear","Date","getFullYear","href","target","rel","CommonLayout","style","minHeight","Input","label","placeholder","field","form","touched","errors","classNames","htmlFor","login","gql","createUser","getUsers","LoginSchema","Yup","shape","password","required","phone","AuthPage","authDispatch","useLocation","useMutation","submitLogin","useLazyQuery","getContext","data","loading","fromUrl","goToForgotPassword","goToRegister","signInSuccess","userData","signIn","initialValues","validationSchema","onSubmit","values","resetForm","variables","token","imagesUrl","uploadUrl","Permissions","getMedia","image","index","onPreview","autoPlay","indexOf","ProductCard","onDelete","onEdit","categoryImage","images","price","shippingCharges","wholeSalePrice","localShippingCharges","stopPropagation","confirmAlert","message","buttons","number","createCategory","updateCategory","getCategories","getCategoryById","deleteCategory","Home","useQuery","categoryLoading","categories","refetch","deleteItem","handleOnDelete","handleOnEdit","QuickView","modalElement","useRef","document","addEventListener","handleClickOutside","bind","removeEventListener","event","domNode","findDOMNode","current","contains","closeModal","product","openModal","ref","showArrows","infiniteLoop","showThumbs","showStatus","autoFocus","productDescription","dangerouslySetInnerHTML","__html","getProducts","getProductById","updateProduct","createProduct","deleteProduct","Product","match","categoryId","params","Proxy","URLSearchParams","search","get","searchParams","prop","previewData","setPreviewData","modalActive","setModalActive","productsList","toLowerCase","productId","Register","submitRegister","goToLogin","AddressSchema","fullName","phoneNumber","matches","min","max","addressLine","city","code","country","LoginStep","checkoutDispatch","userDetails","disabled","AddressStep","handleSaveAddress","addressData","err","PaymentStep","Checkout","totalItems","handleClickTimeline","nextStep","done","active","Select","options","multi","setFieldValue","isMulti","option","find","onChange","Textarea","uploadImages","files","fd","FormData","Object","forEach","file","append","fetch","body","method","ProductSchema","subCategory","CreateProduct","category","c","subCategories","undefined","multiple","accept","currentTarget","json","CreateCategory","submitCategory","isSubmitting","createSubCategory","ResponsiveTable","disableActions","keys","restKeys","__typename","getColumnValue","Array","isArray","join","Table","responsive","createPermission","getPermissionById","getPermissions","deletePermission","updatePermission","createRole","getRoles","getRoleById","deleteRole","updateRole","roleDataLoading","roleData","role","Roles","roles","EditCategory","EditProduct","productLoading","subCategoryDetails","restProductData","categoryDetails","createUserRole","getRolesMapping","rolesMapping","users","userId","roleIds","client","ApolloClient","cache","InMemoryCache","uri","exact","HomePage","CheckoutPage","RegisterPage","CreateProductPage","CategoryPage","SubCategoryPage","ProductPage","EditCategoryPage","EditProductPage","CreateRolePage","RolePage","EditRolePage","PermissionPage","CreatePermissionPage","EditPermissionPage","UserRolePage","CreateUserRolePage","App","ApolloProvider","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.256f7b16.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import React, { useReducer, createContext, useEffect } from \"react\";\nimport _get from \"lodash.get\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\n\nconst initialState = {\n  isLoggedIn: false,\n  user: null,\n  isLoggingIn: false\n};\n\nexport const AuthStateContext = createContext();\nexport const AuthDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_REQUEST\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n        isLoggingIn: true\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: action.payload.user,\n        isLoggingIn: false\n      };\n    case \"LOGIN_FAILURE\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n        isLoggingIn: false\n      };\n    case \"LOGOUT_SUCCESS\":\n      return {\n        ...state,\n        ...initialState\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nexport const signIn = (dispatch, userData) => {\n  localStorage.setItem(\"user\", JSON.stringify(userData));\n  return dispatch({\n    type: \"LOGIN_SUCCESS\",\n    payload: {\n      user: userData\n    }\n  });\n};\n\nexport const signOut = (dispatch) => {\n  localStorage.clear();\n  return dispatch({\n    type: \"LOGOUT_SUCCESS\"\n  });\n};\n\nconst AuthProvider = ({ children }) => {\n  const [persistedUser, setPersistedUser] = useLocalStorage(\"user\", null);\n  const persistedUserState = {\n    ...initialState,\n    user: persistedUser,\n    isLoggedIn: _get(persistedUser, \"username\", \"\").length > 0,\n    hasPermissions: (permissions) =>{\n     const allPermissions =  persistedUser?.context?.roleDetails.reduce((result,item) =>{\n      result = result.concat(item.permissionsDetails.map(permission => permission.name))\n        return result\n     },[]) || []\n     return !permissions || (allPermissions||[]).some(prmsn => permissions.includes(prmsn));\n    }\n  };\n  const [state, dispatch] = useReducer(reducer, persistedUserState);\n\n  useEffect(() => {\n    setPersistedUser(state.user);\n  }, [state.isLoggedIn]);\n\n  return (\n    <AuthDispatchContext.Provider value={dispatch}>\n      <AuthStateContext.Provider value={state}>\n        {children}\n      </AuthStateContext.Provider>\n    </AuthDispatchContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","import React, { useReducer, createContext } from \"react\";\n\nconst initialState = {\n  isSearchBarOpen: false,\n  searchKeyword: \"\"\n};\n\nexport const CommonStateContext = createContext();\nexport const CommonDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE_SEARCH_BAR\":\n      return {\n        ...state,\n        isSearchBarOpen: !state.isSearchBarOpen\n      };\n    case \"SET_SEARCH_KEYWORD\":\n      return {\n        ...state,\n        searchKeyword: action.payload.searchKeyword\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst CommonProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <CommonDispatchContext.Provider value={dispatch}>\n      <CommonStateContext.Provider value={state}>\n        {children}\n      </CommonStateContext.Provider>\n    </CommonDispatchContext.Provider>\n  );\n};\n\nexport const toggleSearchBar = (dispatch) => {\n  return dispatch({\n    type: \"TOGGLE_SEARCH_BAR\"\n  });\n};\n\nexport const setSearchKeyword = (dispatch, searchKeyword) => {\n  return dispatch({\n    type: \"SET_SEARCH_KEYWORD\",\n    payload: {\n      searchKeyword: searchKeyword\n    }\n  });\n};\n\nexport default CommonProvider;\n","import React, { useReducer, createContext } from \"react\";\nimport axios from \"axios\";\n\nconst initialState = {\n  products: null,\n  isLoading: false,\n  isLoaded: false\n};\n\nexport const ProductsStateContext = createContext();\nexport const ProductsDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_PRODUCTS_REQUEST\":\n      return {\n        ...state,\n        isLoading: true,\n        isLoaded: false\n      };\n    case \"GET_PRODUCTS_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isLoaded: true,\n        products: action.payload.products\n      };\n    case \"GET_PRODUCTS_FAILURE\":\n      return {\n        ...state,\n        products: null,\n        isLoading: false,\n        isLoaded: false\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst ProductsProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <ProductsDispatchContext.Provider value={dispatch}>\n      <ProductsStateContext.Provider value={state}>\n        {children}\n      </ProductsStateContext.Provider>\n    </ProductsDispatchContext.Provider>\n  );\n};\n\nexport const getProducts = (dispatch) => {\n  dispatch({\n    type: \"GET_PRODUCTS_REQUEST\"\n  });\n  const url =\n    \"https://res.cloudinary.com/sivadass/raw/upload/v1535817394/json/products.json\";\n  axios\n    .get(url)\n    .then((response) => {\n      dispatch({\n        type: \"GET_PRODUCTS_SUCCESS\",\n        payload: {\n          products: response.data\n        }\n      });\n    })\n    .catch((error) => {\n      console.error(error);\n      dispatch({\n        type: \"GET_PRODUCTS_FAILURE\"\n      });\n    });\n};\n\nexport default ProductsProvider;\n","import React, { useReducer, createContext, useEffect } from \"react\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\n\nconst initialState = {\n  isCartOpen: false,\n  items: []\n};\n\nexport const CartStateContext = createContext();\nexport const CartDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE_CART_POPUP\":\n      return {\n        ...state,\n        isCartOpen: !state.isCartOpen\n      };\n    case \"ADD_TO_CART\":\n      const id = action.payload.cartItem.id;\n      const isOld = state.items.map((item) => item.id).includes(id);\n      let cartItems = null;\n      if (isOld) {\n        const items = state.items.map((item) => {\n          if (item.id === id) {\n            return {\n              ...item,\n              quantity: item.quantity + 1\n            };\n          }\n          return item;\n        });\n        cartItems = [...items];\n      } else {\n        cartItems = [...state.items, action.payload.cartItem];\n      }\n      return {\n        ...state,\n        items: cartItems\n      };\n    case \"REMOVE_FROM_CART\":\n      return {\n        ...state,\n        items: state.items.filter(\n          (item) => item.id !== action.payload.cartItemId\n        )\n      };\n    case \"CLEAR_CART\":\n      return {\n        ...state,\n        ...initialState\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nexport const toggleCartPopup = (dispatch) => {\n  return dispatch({\n    type: \"TOGGLE_CART_POPUP\"\n  });\n};\n\nexport const addToCart = (dispatch, cartItem) => {\n  return dispatch({\n    type: \"ADD_TO_CART\",\n    payload: {\n      cartItem: cartItem\n    }\n  });\n};\n\nexport const removeFromCart = (dispatch, cartItemId) => {\n  return dispatch({\n    type: \"REMOVE_FROM_CART\",\n    payload: {\n      cartItemId: cartItemId\n    }\n  });\n};\n\nexport const clearCart = (dispatch) => {\n  return dispatch({\n    type: \"CLEAR_CART\"\n  });\n};\n\nconst CartProvider = ({ children }) => {\n  const [persistedCartItems, setPersistedCartItems] = useLocalStorage(\n    \"cartItems\",\n    []\n  );\n  const persistedCartState = {\n    isCartOpen: false,\n    items: persistedCartItems || []\n  };\n  const [state, dispatch] = useReducer(reducer, persistedCartState);\n  useEffect(() => {\n    setPersistedCartItems(state.items);\n  }, [JSON.stringify(state.items)]);\n  return (\n    <CartDispatchContext.Provider value={dispatch}>\n      <CartStateContext.Provider value={state}>\n        {children}\n      </CartStateContext.Provider>\n    </CartDispatchContext.Provider>\n  );\n};\n\nexport default CartProvider;\n","import React, { useReducer, createContext, useEffect } from \"react\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\n\nexport const CHECKOUT_STEPS = {\n  AUTH: \"auth\",\n  SHIPPING: \"shipping\",\n  PAYMENT: \"payment\"\n};\n\nconst initialState = {\n  step: CHECKOUT_STEPS.AUTH,\n  shippingAddress: null\n};\n\nexport const CheckoutStateContext = createContext();\nexport const CheckoutDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_CHECKOUT_STEP\":\n      return {\n        ...state,\n        step: action.payload.step\n      };\n    case \"SET_SHIPPING_ADDRESS\":\n      return {\n        ...state,\n        shippingAddress: action.payload.shippingAddress\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst CheckoutProvider = ({ children }) => {\n  const [checkoutState, setCheckoutState] = useLocalStorage(\"checkout\", null);\n  const persistedCheckoutState = {\n    ...initialState,\n    shippingAddress: checkoutState || {}\n  };\n  const [state, dispatch] = useReducer(reducer, persistedCheckoutState);\n\n  useEffect(() => {\n    setCheckoutState(state.shippingAddress);\n  }, [state.shippingAddress]);\n  return (\n    <CheckoutDispatchContext.Provider value={dispatch}>\n      <CheckoutStateContext.Provider value={state}>\n        {children}\n      </CheckoutStateContext.Provider>\n    </CheckoutDispatchContext.Provider>\n  );\n};\n\nexport const setCheckoutStep = (dispatch, step) => {\n  return dispatch({\n    type: \"SET_CHECKOUT_STEP\",\n    payload: {\n      step\n    }\n  });\n};\n\nexport const saveShippingAddress = (dispatch, shippingAddress) => {\n  dispatch({\n    type: \"SET_SHIPPING_ADDRESS\",\n    payload: {\n      shippingAddress\n    }\n  });\n  return setCheckoutStep(dispatch, CHECKOUT_STEPS.PAYMENT);\n};\n\nexport default CheckoutProvider;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthStateContext } from \"contexts/auth\";\n\nfunction RouteWrapper({\n  component: Component,\n  layout: Layout,\n  isPrivate = false,\n  permissions,\n  ...rest\n}) {\n  const { user, hasPermissions } = useContext(AuthStateContext);\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isPrivate && (!hasPermissions(permissions))) {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/auth\",\n                state: { from: props.location }\n              }}\n            />\n          );\n        }\n        return (\n          <Layout {...props}>\n            <Component {...props} />\n          </Layout>\n        );\n      }}\n    />\n  );\n}\n\nexport default RouteWrapper;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst AuthLayout = ({ children }) => {\n  return (\n    <div className=\"auth-container\">\n      <div className=\"wrapper\">\n        <div className=\"auth-brand\">\n          <Link to=\"/\">\n            <img\n              className=\"logo\"\n              src=\"/logo.png\"\n              alt=\"MB Group\"\n            />\n          </Link>\n        </div>\n        <div>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthLayout;\n","import React, {  useContext } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { AuthStateContext,signOut, AuthDispatchContext } from \"contexts/auth\";\n// import NavDropdown from 'react-bootstrap/NavDropdown';\n\nfunction Header({navConfig}) {\n    const authState = useContext(AuthStateContext);\n    const dispatch = useContext(AuthDispatchContext)\n    const history = useHistory();\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand>  <Link className=\"navbar-brand\" to=\"/\"> <img\n              className=\"logo\"\n              src=\"/logo.png\"\n              alt=\"MB Group\"\n              width=\"75\"\n            /></Link></Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"me-auto\">\n            {navConfig.map(nav => nav.showNav && authState.hasPermissions(nav.permissions) && <Link key={nav.id} className=\"nav-link\" to={nav.path}> {nav.title}</Link>)}\n            \n            {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Another action\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">\n                Separated link\n              </NavDropdown.Item>\n            </NavDropdown> */}\n          </Nav>\n          <Nav>\n          {!authState.user && <Link  className=\"nav-link\" to='/auth'> <img width=\"35\" src=\"/login.png\" alt=\"login\" title=\"login\" /></Link>}\n          {authState.user && <a  className=\"nav-link\" onClick={(e)=>{\n            e.preventDefault()\n           signOut(dispatch)\n            history.push('/')\n            window.location.reload()\n          }}> <img title=\"logout\" width=\"35\" src=\"/logout.png\" alt=\"logout\" /></a>}\n           \n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;","import React from \"react\";\n\nconst Footer = () => {\n  const currentYear = new Date().getFullYear();\n  return (\n    <footer>\n      <p className=\"footer-links\">\n        <a\n          href=\"https://github.com/sivadass/react-shopping-cart\"\n          target=\"_blank\" rel=\"noreferrer\"\n        >\n          View Source on Github\n        </a>\n        <span> / </span>\n        <a href=\"mailto:contact@sivadass.in\" target=\"_blank\" rel=\"noreferrer\">\n          Need any help?\n        </a>\n        \n      </p>\n      <p>\n        &copy; {currentYear} <strong>MB Group</strong> - Personalized Gift Store\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Header from 'components/Navbar'\nimport Footer from \"components/Footer\";\nimport {navConfig} from '../App'\n\nconst CommonLayout = ({ children }) => {\n  return (\n    <div className=\"common-layout\">\n      <Header navConfig={navConfig}/>\n      <main style={{minHeight:'75vh'}}>{children}</main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default CommonLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nconst Input = ({\n  type,\n  label,\n  placeholder,\n  className,\n  field,\n  form: { touched, errors },\n  ...props\n}) => (\n  <div\n    className={classNames(\"form-group\", className, {\n      error: touched[field.name] && errors[field.name]\n    })}\n  >\n    {label && (\n      <label className=\"form-label\" htmlFor={field.name}>\n        {label}\n      </label>\n    )}\n    <input\n      type={type}\n      className={classNames(\"form-control\", {\n        \"is-invalid\": touched[field.name] && errors[field.name]\n      })}\n      placeholder={placeholder}\n      {...field}\n      {...props}\n    />\n    {touched[field.name] && errors[field.name] && (\n      <div className=\"invalid-feedback\">{errors[field.name]}</div>\n    )}\n  </div>\n);\n\nexport default Input;\n","import { gql } from \"@apollo/client\";\n\nexport const login = gql`\n  mutation login($phone: String!, $password: String!) {\n    login(phone: $phone, password: $password) {\n      token\n      userId\n    }\n  }\n`;\n\nexport const context = gql`\n  query context($token: String!) {\n    context(token: $token) {\n      userId\n      userDetails {\n        name\n      }\n      roleDetails {\n        permissionsDetails {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const createUser = gql`\n  mutation createUser($phone: String!, $name: String!, $password: String!) {\n    createUser(phone: $phone, name: $name, password: $password) {\n      id\n      phone\n      name\n    }\n  }\n`;\n\nexport const getUsers = gql`\n  query users {\n    users {\n      id\n      phone\n      name\n    }\n  }\n`;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"contexts/auth\";\nimport Input from \"components/core/form-controls/Input\";\nimport {login, context} from 'graphql/auth';\nimport {  useMutation, useLazyQuery } from '@apollo/client';\n\nconst LoginSchema = Yup.object().shape({\n  password: Yup.string().required(\"Password is required!\"),\n  phone: Yup.string().required(\"Mobile Number is required!\")\n});\n\nconst AuthPage = () => {\n  const authDispatch = useContext(AuthDispatchContext);\n  const history = useHistory();\n  const location = useLocation();\n  const [submitLogin] = useMutation(login);\n  const [\n    getContext, \n    { loading, data }\n  ] = useLazyQuery(context);\n  const fromUrl = _get(location, \"state.from.pathname\");\n\n  const goToForgotPassword = (e) => {\n    e.preventDefault();\n  };\n\n  const goToRegister = (e) => {\n    e.preventDefault();\n    history.push(\"/register\");\n  };\n\n  useEffect(()=>{\n    if(data){\n      signInSuccess(data);\n    }\n  },[data]);\n\n  const signInSuccess = (userData) => {\n    signIn(authDispatch, userData);\n    if (fromUrl) {\n      history.push(fromUrl);\n    } else {\n      history.push(\"/\");\n    }\n    window.location.reload()\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        phone: \"\",\n        password: \"\"\n      }}\n      validationSchema={LoginSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          const userData = await submitLogin({ variables:\n            values\n          });\n          getContext({ variables:\n            {token:userData?.data?.login?.token}\n          });\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form>\n          <Field\n            name=\"phone\"\n            type=\"text\"\n            placeholder=\"Mobile Number\"\n            component={Input}\n          />\n          <Field\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            component={Input}\n          />\n\n          <p>\n            <a href=\"/#\" onClick={goToForgotPassword}>\n              Forgot Password?\n            </a>\n          </p>\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Login\n          </button>\n\n          <p>\n            New here?{\" \"}\n            <a href=\"/#\" onClick={goToRegister}>\n              Sign Up Now!\n            </a>\n          </p>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AuthPage;\n","export const endpoint = \"https://api.mbgroup.shop/graphql\";\nexport const imagesUrl = \"https://api.mbgroup.shop/static\";\nexport const uploadUrl = \"https://api.mbgroup.shop/file/upload\";\n","export const phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nexport const Permissions = {\n  EDIT_CATEGORY: \"EDIT_CATEGORY\",\n  DELETE_CATEGORY: \"DELETE_CATEGORY\",\n  CREATE_CATEGORY: \"CREATE_CATEGORY\",\n  EDIT_PRODUCT: \"EDIT_PRODUCT\",\n  DELETE_PRODUCT: \"DELETE_PRODUCT\",\n  CREATE_PRODUCT: \"CREATE_PRODUCT\",\n  CREATE_PERMISSION: \"CREATE_PERMISSION\",\n  CREATE_ROLE: \"CREATE_ROLE\",\n  CREATE_USER_ROLE: \"CREATE_USER_ROLE\",\n  RESELLER: \"RESELLER\"\n};\n","import { imagesUrl } from \"./constants\";\nexport const getMedia = ({ image, index, onPreview, data, autoPlay }) => {\n  if (image.indexOf(\".mp4\") > -1) {\n    return (\n      <video\n        key={index}\n        style={{ width: \"100%\" }}\n        autoPlay={autoPlay}\n        onClick={() => onPreview && onPreview(data)}\n      >\n        <source src={`${imagesUrl}/${image}`} type=\"video/mp4\" />\n        <source src={`${imagesUrl}/${image}`} type=\"video/ogg\" />\n        Your browser does not support HTML video.\n      </video>\n    );\n  }\n  return (\n    <img\n      key={index}\n      src={`${imagesUrl}/${image}`}\n      alt={image}\n      onClick={() => onPreview && onPreview(data)}\n    />\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { CartDispatchContext, addToCart } from \"contexts/cart\";\nimport { AuthStateContext } from \"contexts/auth\";\nimport { imagesUrl} from \"../constants\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport {Permissions} from '../constants/common'\nimport ReactWhatsapp from 'react-whatsapp';\nimport {getMedia}from 'utils'\n\nconst ProductCard = ({ data, onPreview , onClick, onDelete, onEdit}) => {\n  const [isAdded, setIsAdded] = useState(false);\n  const dispatch = useContext(CartDispatchContext);\n  const authState = useContext(AuthStateContext);\n  const { categoryImage,images, name, price, shippingCharges, wholeSalePrice, localShippingCharges } = data;\n\n  const handleAddToCart = () => {\n    const product = { ...data, quantity: 1 };\n    addToCart(dispatch, product);\n    setIsAdded(true);\n    setTimeout(() => {\n      setIsAdded(false);\n    }, 3500);\n  };\n\n  return (\n    <div className={`product ${onClick?'category':''}`} onClick={()=>onClick && onClick(data)}>\n      <div>\n      <div className=\"product-image\">\n      {getMedia({image: categoryImage || (images && images[0]), index:1, onPreview, data,autoPlay:false})}\n      </div>\n      {name && <h4 className=\"product-name\">{name}</h4>}\n    <div> {price && <p className=\"product-price\">{authState.hasPermissions([Permissions.RESELLER])?  wholeSalePrice:price}</p>}\n     {shippingCharges && <p className=\"product-price shipping-charges\">{shippingCharges || 0} (Shipping Charges)</p>}\n\n     {localShippingCharges && authState.hasPermissions([Permissions.RESELLER]) && <p className=\"product-price shipping-charges\">{localShippingCharges || 0} (Local Shipping Charges)</p>}     </div>\n     {authState.hasPermissions([Permissions.DELETE_CATEGORY, Permissions.DELETE_PRODUCT]) && <button className=\"outline delete-icon\" onClick={async (e) => {\n      e.stopPropagation()\n      confirmAlert({\n        title: 'Confirm to Delete',\n        message: 'Are you sure you want to delete?.',\n        buttons: [\n          {\n            label: 'Yes',\n            onClick: () => onDelete(data)\n          },\n          {\n            label: 'No',\n            onClick: () => ({})\n          }\n        ]\n      });\n     \n     }}>\n          <i className=\"rsc-icon-delete\" />\n        </button>}\n        {authState.hasPermissions([Permissions.EDIT_CATEGORY, Permissions.EDIT_PRODUCT]) && <button className=\"outline edit-icon\" onClick={(e) => {\n      e.stopPropagation()\n      onEdit(data)\n     }}>\n          <i className=\"rsc-icon-edit\" />\n        </button>}\n     {false && <div className=\"product-action\">\n        <button\n          className={!isAdded ? \"\" : \"added\"}\n          type=\"button\"\n          onClick={handleAddToCart}\n        >\n          {!isAdded ? \"ADD TO CART\" : \"✔ ADDED\"}\n        </button>\n      </div>}\n      </div>\n      {onPreview && <ReactWhatsapp className=\"whatsapp\" number={authState.hasPermissions([Permissions.RESELLER])?'+91-9582611877':'+91-9818855029'} message={`${window.location.href}?productId=${data.id}`} ><img src=\"/whatsapp.png\" width=\"50\" alt=\"whatsapp\"/></ReactWhatsapp>}\n    </div>\n  );\n};\n\nexport default ProductCard;\n","import { gql } from \"@apollo/client\";\n\nexport const createCategory = gql`\n  mutation createCategory($name: String!, $categoryImage: String!) {\n    createCategory(name: $name, categoryImage: $categoryImage) {\n      id\n      name\n      categoryImage\n    }\n  }\n`;\n\nexport const updateCategory = gql`\n  mutation editCategory(\n    $name: String!\n    $categoryImage: String\n    $categoryId: ID!\n  ) {\n    editCategory(\n      categoryId: $categoryId\n      name: $name\n      categoryImage: $categoryImage\n    )\n  }\n`;\n\nexport const getCategories = gql`\n  query categories {\n    categories {\n      id\n      name\n      categoryImage\n      subCategories {\n        id\n        name\n        category\n      }\n    }\n  }\n`;\n\nexport const getCategoryById = gql`\n  query category($id: ID!) {\n    category(id: $id) {\n      id\n      name\n      categoryImage\n      subCategories {\n        id\n        name\n        category\n      }\n    }\n  }\n`;\n\nexport const deleteCategory = gql`\n  mutation deleteCategory($id: ID!) {\n    deleteCategory(id: $id)\n  }\n`;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport ProductCard from \"components/Product\";\nimport {  useQuery, useMutation } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\nimport { getCategories, deleteCategory } from \"graphql/category\";\n\nconst Home = () => {\n  const history = useHistory();\n  const {loading:categoryLoading, data :{categories}  = {}, refetch} = useQuery(getCategories);\n  const [deleteItem] = useMutation(deleteCategory);\n  useEffect(()=>{refetch()},[])\n\n  const onPreview = (data) =>{\n    history.push(`/products/${data.id}`);\n  }\n  const handleOnDelete = async (data) =>{\n    await deleteItem({ variables:\n      {id:data.id}\n    })\n    await refetch()\n  }\n\n  const handleOnEdit = (data) => {\n    history.push(`/categories/${data.id}`);\n  }\n\n  if (categoryLoading) {\n    return (\n      <div className=\"products-wrapper\">\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n  return (\n    <div className=\"products-wrapper\">\n      <div className=\"container products\"> \n      { \n        categories && categories.map((data) => {\n          return <ProductCard onEdit={handleOnEdit} onDelete={handleOnDelete}  key={data.id} data={data} onClick={()=>onPreview(data)}/>;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useRef, useEffect,useContext } from \"react\";\nimport { findDOMNode } from \"react-dom\";\nimport { AuthStateContext } from \"contexts/auth\";\nimport {getMedia} from 'utils'\nimport { Carousel } from \"react-responsive-carousel\";\n\nconst QuickView = (props) => {\n    const modalElement = useRef();\n    const authState = useContext(AuthStateContext);\n  \n  useEffect(() => {\n    document.addEventListener(\n      \"click\",\n      handleClickOutside.bind(this),\n      true\n    );\n    return ()=>{\n        document.removeEventListener(\n            \"click\",\n            handleClickOutside.bind(this),\n            true\n          );\n    }\n  },[])\n\n\n const handleClickOutside =(event) => {\n    const domNode = findDOMNode(modalElement.current);\n    if (!domNode || !domNode.contains(event.target)) {\n      props.closeModal();\n    }\n  }\n\n const handleClose = () => {\n    props.closeModal();\n  }\n  \n  const {categoryImage, images} = props.product\n    return (\n      <div\n        className={\n          props.openModal ? \"modal-wrapper active\" : \"modal-wrapper\"\n        }\n      >\n        <div className=\"modal1\" ref={modalElement}>\n          <button\n            type=\"button\"\n            className=\"close\"\n            onClick={handleClose.bind(this)}\n          >\n            &times;\n          </button>\n          <div className=\"quick-view\">\n            <div className=\"quick-view-image\">\n      <Carousel showArrows={false} infiniteLoop showThumbs={false} showStatus={true} autoFocus={false} >\n              {images.map((image,index)=>getMedia({image,index, autoPlay:true}))}\n            </Carousel>\n              {props.product.productDescription &&<p className=\"product-description\" dangerouslySetInnerHTML={{__html:props.product.productDescription}}></p>}\n            </div>\n            <div className=\"quick-view-details\">\n              <span className=\"product-name\">{props.product.name}</span>\n              {/* {props.product.price && <span className=\"product-price\">{(authState.hasPermissions([Permissions.RESELLER])? Number(props.product.wholeSalePrice):Number(props.product.price)) + Number(props.product.shippingCharges)}</span>} */}\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  \n}\n\nexport default QuickView;","import { gql } from \"@apollo/client\";\n\nexport const getProducts = gql`\n  query products($categoryId: ID!) {\n    products: productsByCategory(categoryId: $categoryId) {\n      id\n      name\n      price\n      wholeSalePrice\n      images\n      productDescription\n      subCategory\n      shippingCharges\n      localShippingCharges\n      subCategoryDetails {\n        id\n        name\n        category\n        categoryDetails {\n          id\n          name\n          categoryImage\n        }\n      }\n    }\n  }\n`;\nexport const getProductById = gql`\n  query product($id: ID!) {\n    product(id: $id) {\n      id\n      name\n      price\n      wholeSalePrice\n      images\n      productDescription\n      subCategory\n      shippingCharges\n      localShippingCharges\n      subCategoryDetails {\n        id\n        name\n        category\n        categoryDetails {\n          id\n          name\n          categoryImage\n          subCategories {\n            id\n            name\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const updateProduct = gql`\n  mutation editProduct(\n    $id: ID!\n    $name: String!\n    $price: String!\n    $images: [String]!\n    $subCategory: String!\n    $wholeSalePrice: String!\n    $productDescription: String!\n    $shippingCharges: String!\n    $localShippingCharges: String\n  ) {\n    editProduct(\n      id: $id\n      name: $name\n      price: $price\n      images: $images\n      subCategory: $subCategory\n      wholeSalePrice: $wholeSalePrice\n      productDescription: $productDescription\n      shippingCharges: $shippingCharges\n      localShippingCharges: $localShippingCharges\n    )\n  }\n`;\n\nexport const createProduct = gql`\n  mutation createProduct(\n    $name: String!\n    $price: String!\n    $images: [String]!\n    $subCategory: String!\n    $wholeSalePrice: String!\n    $productDescription: String!\n    $shippingCharges: String!\n    $localShippingCharges: String\n  ) {\n    createProduct(\n      name: $name\n      price: $price\n      images: $images\n      subCategory: $subCategory\n      wholeSalePrice: $wholeSalePrice\n      productDescription: $productDescription\n      shippingCharges: $shippingCharges\n      localShippingCharges: $localShippingCharges\n    ) {\n      id\n      name\n      price\n      wholeSalePrice\n      images\n      subCategory\n      productDescription\n      shippingCharges\n      localShippingCharges\n    }\n  }\n`;\n\nexport const deleteProduct = gql`\n  mutation deleteProduct($id: ID!) {\n    deleteProduct(id: $id)\n  }\n`;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport ProductCard from \"components/Product\";\nimport QuickView from \"components/QuickView\"\nimport {  useQuery,useMutation } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\nimport {\n  getProducts,\n  deleteProduct\n} from \"graphql/products\";\nimport { CommonStateContext } from \"contexts/common\";\n\nconst Product = ({match}) => {\n  const { searchKeyword } = useContext(CommonStateContext);\n  const history = useHistory();\n  const { loading:isLoading, error, data = {}, refetch } = useQuery(getProducts,{\n    variables:{categoryId: match?.params?.categoryId}\n  });\n  const params = new Proxy(new URLSearchParams(history.location.search), {\n    get: (searchParams, prop) => searchParams.get(prop),\n  });\n  useEffect(()=>{refetch()},[])\n  const [deleteItem] = useMutation(deleteProduct);\n  const [previewData, setPreviewData] = useState(null)\n  const [modalActive, setModalActive] = useState(false)\n  const { products} = data ;\n  let productsList =\n    products &&\n    products.filter((product) => {\n      return (\n        product.name.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n        !searchKeyword\n      );\n    });\n\n    if(params.productId){\n      productsList = productsList && productsList.filter(product => product.id === params.productId)\n    }\n\n\n  const onPreview = (data) =>{\n    setPreviewData(data)\n    setModalActive(true)\n  }\n  const closeModal = () => {\n    setModalActive(false);\n  }\n  const handleOnDelete = async (data) =>{\n    await deleteItem({ variables:\n      {id:data.id}\n    })\n    await refetch()\n  }\n  const handleOnEdit = (data) => {\n    history.push(`/editProduct/${data.id}`);\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"products-wrapper\">\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n  return (\n    <div className=\"products-wrapper\">\n      <div className=\"container products\">\n        {products &&\n          productsList.map((data) => {\n            return <ProductCard onEdit={handleOnEdit} onDelete={handleOnDelete}  onPreview={onPreview} key={data.id} data={data} />;\n          })}\n        \n      </div>\n          {previewData && <QuickView\n          product={previewData}\n          openModal={modalActive}\n          closeModal={closeModal}\n        />}\n    </div>\n  );\n};\n\nexport default Product;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport Input from \"components/core/form-controls/Input\";\nimport {createUser} from 'graphql/auth';\nimport {  useMutation } from '@apollo/client';\n\nconst LoginSchema = Yup.object().shape({\n  password: Yup.string().required(\"Password is required!\"),\n  phone: Yup.string().required(\"Mobile Number is required!\"),\n  name: Yup.string().required(\"Name is required!\")\n});\n\nconst Register = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const [submitRegister] = useMutation(createUser);\n\n  const fromUrl = _get(location, \"state.from.pathname\");\n\n  const goToLogin = (e) => {\n    e.preventDefault();\n    history.push(\"/auth\");\n  };\n\n\n\n  const registerSuccess = () => {\n    if (fromUrl) {\n      history.push(fromUrl);\n    } else {\n      history.push(\"/auth\");\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        phone: \"\",\n        password: \"\",\n        name:''\n      }}\n      validationSchema={LoginSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          const userData = await submitRegister({ variables:\n            values\n          });\n          if(userData){\n            registerSuccess()\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form>\n          <Field\n            name=\"phone\"\n            type=\"text\"\n            placeholder=\"Mobile Number\"\n            component={Input}\n          />\n             <Field\n            name=\"name\"\n            type=\"name\"\n            placeholder=\"Name\"\n            component={Input}\n          />\n          <Field\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            component={Input}\n          />\n\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Register\n          </button>\n\n          <p>\n            Already Registered?{\" \"}\n            <a href=\"/#\" onClick={goToLogin}>\n              Login Now!\n            </a>\n          </p>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Register;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport {\n  CheckoutStateContext,\n  CheckoutDispatchContext,\n  CHECKOUT_STEPS,\n  setCheckoutStep,\n  saveShippingAddress\n} from \"contexts/checkout\";\nimport { CartStateContext } from \"contexts/cart\";\nimport { AuthStateContext, AuthDispatchContext, signOut } from \"contexts/auth\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport Input from \"components/core/form-controls/Input\";\nimport { phoneRegExp } from \"constants/common\";\n\nconst AddressSchema = Yup.object().shape({\n  fullName: Yup.string().required(\"Full Name is required\"),\n  phoneNumber: Yup.string()\n    .required(\"Phone Number is required\")\n    .matches(phoneRegExp, \"Phone Number is not a valid 10 digit number\")\n    .min(10, \"Phone Number is too short\")\n    .max(10, \"Phone Number is too long\"),\n  addressLine: Yup.string().required(\"Door No. & Street is required!\"),\n  city: Yup.string().required(\"City is required!\"),\n  state: Yup.string().required(\"State is required!\"),\n  code: Yup.string().required(\"ZIP/Postal code is required!\"),\n  country: Yup.string().required(\"Country is required!\")\n});\n\nconst LoginStep = () => {\n  const history = useHistory();\n  const { user, isLoggedIn } = useContext(AuthStateContext);\n  const authDispatch = useContext(AuthDispatchContext);\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n  const handleContinueShopping = () => {\n    history.push(\"/\");\n  };\n  const handleLoginAsDiffUser = () => {\n    signOut(authDispatch);\n    history.push(\"/auth\");\n  };\n  const handleGotoLogin = () => {\n    history.push(\"/auth\");\n  };\n  const handleProceed = () => {\n    setCheckoutStep(checkoutDispatch, CHECKOUT_STEPS.SHIPPING);\n  };\n  return (\n    <div className=\"detail-container\">\n      <h2>Sign In now!</h2>\n      <div className=\"auth-message\">\n        {isLoggedIn ? (\n          <>\n            <p>\n              Logged in as <span>{user?.context?.userDetails?.name}</span>\n            </p>\n            <button onClick={() => handleLoginAsDiffUser()}>\n              Login as Different User\n            </button>\n          </>\n        ) : (\n          <>\n            <p>Please login to continue.</p>\n            <button onClick={() => handleGotoLogin()}>Login</button>\n          </>\n        )}\n      </div>\n      <div className=\"actions\">\n        <button className=\"outline\" onClick={() => handleContinueShopping()}>\n          <i className=\"rsc-icon-arrow_back\" /> Continue Shopping\n        </button>\n        <button disabled={!isLoggedIn} onClick={() => handleProceed()}>\n          Proceed\n          <i className=\"rsc-icon-arrow_forward\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst AddressStep = () => {\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n\n  const handleBackToLogin = () => {\n    setCheckoutStep(checkoutDispatch, CHECKOUT_STEPS.AUTH);\n  };\n  const handleSaveAddress = (addressData) => {\n    saveShippingAddress(checkoutDispatch, addressData);\n  };\n  return (\n    <div className=\"detail-container\">\n      <h2>Shipping Address</h2>\n      <Formik\n        initialValues={{\n          fullName: \"John Doe\",\n          phoneNumber: \"5552229876\",\n          addressLine: \"L1, Palm Residency\",\n          city: \"Kingston\",\n          state: \"New York\",\n          code: \"12401\",\n          country: \"United States\"\n        }}\n        validationSchema={AddressSchema}\n        onSubmit={async (values, { resetForm }) => {\n          try {\n            const addressData = { ...values };\n            resetForm();\n            handleSaveAddress(addressData);\n          } catch (err) {\n            console.error(err);\n          }\n        }}\n      >\n        {() => (\n          <Form>\n            <div className=\"field-group\">\n              <Field\n                name=\"fullName\"\n                type=\"text\"\n                placeholder=\"Full Name\"\n                component={Input}\n              />\n              <Field\n                name=\"phoneNumber\"\n                type=\"text\"\n                placeholder=\"Phone Number\"\n                component={Input}\n              />\n            </div>\n            <Field\n              name=\"addressLine\"\n              type=\"text\"\n              placeholder=\"Door No. & Street\"\n              component={Input}\n            />\n            <div className=\"field-group\">\n              <Field\n                name=\"city\"\n                type=\"text\"\n                placeholder=\"City\"\n                component={Input}\n              />\n              <Field\n                name=\"state\"\n                type=\"text\"\n                placeholder=\"State\"\n                component={Input}\n              />\n            </div>\n            <div className=\"field-group\">\n              <Field\n                name=\"code\"\n                type=\"text\"\n                placeholder=\"ZIP/Postal Code\"\n                component={Input}\n              />\n              <Field\n                name=\"country\"\n                type=\"text\"\n                placeholder=\"Country\"\n                component={Input}\n              />\n            </div>\n            <div className=\"actions\">\n              <button\n                type=\"button\"\n                className=\"outline\"\n                onClick={() => handleBackToLogin()}\n              >\n                <i className=\"rsc-icon-arrow_back\" /> Login in as Different User\n              </button>\n              <button type=\"submit\">\n                Save Address\n                <i className=\"rsc-icon-arrow_forward\" />\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst PaymentStep = () => {\n  const { shippingAddress } = useContext(CheckoutStateContext);\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n  const handleBackToAddress = () => {\n    setCheckoutStep(checkoutDispatch, CHECKOUT_STEPS.SHIPPING);\n  };\n  const handlePayment = () => {};\n  return (\n    <div className=\"detail-container\">\n      <h2>Payment</h2>\n      {/* <div>\n        <pre>{JSON.stringify(shippingAddress, null, 0)}</pre>\n      </div> */}\n      <div className=\"actions\">\n        <button\n          type=\"button\"\n          className=\"outline\"\n          onClick={() => handleBackToAddress()}\n        >\n          <i className=\"rsc-icon-arrow_back\" /> Back to Shipping Details\n        </button>\n        <button disabled={!shippingAddress} onClick={() => handlePayment()}>\n          Save Address\n          <i className=\"rsc-icon-arrow_forward\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst Checkout = () => {\n  const { items = [] } = useContext(CartStateContext);\n  const { isLoggedIn } = useContext(AuthStateContext);\n  const { step, shippingAddress } = useContext(CheckoutStateContext);\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n  const totalItems = items.length;\n\n  const handleClickTimeline = (nextStep) => {\n    setCheckoutStep(checkoutDispatch, nextStep);\n  };\n\n  return (\n    <div className=\"checkout-page\">\n      <div className=\"container1\">\n        <div className=\"order-details\">\n          <ul className=\"timeline\">\n            <li\n              className={classNames({\n                done: isLoggedIn,\n                active: step === CHECKOUT_STEPS.AUTH\n              })}\n              onClick={() => handleClickTimeline(CHECKOUT_STEPS.AUTH)}\n            >\n              <h2>Sign In</h2>\n              <i className=\"rsc-icon-check_circle\" />\n            </li>\n            <li\n              className={classNames({\n                done: shippingAddress !== null,\n                active: step === CHECKOUT_STEPS.SHIPPING\n              })}\n              onClick={() => handleClickTimeline(CHECKOUT_STEPS.SHIPPING)}\n            >\n              <h2>Shipping</h2>\n              <i className=\"rsc-icon-check_circle\" />\n            </li>\n            <li\n              className={classNames({\n                done: false,\n                active: step === CHECKOUT_STEPS.PAYMENT\n              })}\n              onClick={() => handleClickTimeline(CHECKOUT_STEPS.PAYMENT)}\n            >\n              <h2>Payment</h2>\n              <i className=\"rsc-icon-check_circle\" />\n            </li>\n          </ul>\n          {step === CHECKOUT_STEPS.AUTH && <LoginStep />}\n          {step === CHECKOUT_STEPS.SHIPPING && <AddressStep />}\n          {step === CHECKOUT_STEPS.PAYMENT && <PaymentStep />}\n        </div>\n        <div className=\"order-summary\">\n          <h2>\n            Summary\n            <span>{` (${totalItems}) Items`}</span>\n          </h2>\n          <ul className=\"cart-items\">\n            {items.map((product) => {\n              return (\n                <li className=\"cart-item\" key={product.name}>\n                  <img className=\"product-image\" src={product.image} />\n                  <div className=\"product-info\">\n                    <p className=\"product-name\">{product.name}</p>\n                    <p className=\"product-price\">{product.price}</p>\n                  </div>\n                  <div className=\"product-total\">\n                    <p className=\"quantity\">\n                      {`${product.quantity} ${\n                        product.quantity > 1 ? \"Nos.\" : \"No.\"\n                      }`}\n                    </p>\n                    <p className=\"amount\">{product.quantity * product.price}</p>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n\n          <ul className=\"total-breakup\">\n            <li>\n              <p>Subtotal</p>\n              <p>5000</p>\n            </li>\n            <li>\n              <p>Tax</p>\n              <p>5000</p>\n            </li>\n            <li>\n              <p>Shipping</p>\n              <p>5000</p>\n            </li>\n            <li>\n              <h2>Total</h2>\n              <h2>5000</h2>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport ReactSelect from \"react-select\";\n\nconst Select = ({\n  options,\n  multi = false,\n  type,\n  label,\n  placeholder,\n  field,\n  form: { touched, errors, setFieldValue },\n  required = false,\n  className,\n  ...props\n}) => {\n  const isError = touched[field.name] && errors[field.name];\n\n  const onChange = (option) => {\n    setFieldValue(\n      field.name,\n      multi ? option.map((item) => item.value) : option.value\n    );\n  };\n\n  const getValue = () => {\n    if (options) {\n      return multi\n        ? options.filter((option) => field.value.indexOf(option.value) >= 0)\n        : options.find((option) => option.value === field.value);\n    } else {\n      return multi ? [] : \"\";\n    }\n  };\n\n  return (\n    <div\n      className={classNames(\"form-group\", className, {\n        error: touched[field.name] && errors[field.name]\n      })}\n    >\n      {label && (\n        <label className=\"form-label\" htmlFor={field.name}>\n          {label}\n        </label>\n      )}\n      <ReactSelect\n        options={options}\n        isMulti={multi}\n        value={getValue()}\n        onChange={onChange}\n        name={field.name}\n        className={classNames({\n          \"is-invalid\": touched[field.name] && errors[field.name]\n        })}\n        placeholder={placeholder}\n        {...props}\n      />\n      {touched[field.name] && errors[field.name] && (\n        <div className=\"invalid-feedback\">{errors[field.name]}</div>\n      )}\n    </div>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nconst Textarea = ({\n  label,\n  placeholder,\n  className,\n  field,\n  form: { touched, errors },\n  ...props\n}) => (\n  <div\n    className={classNames(\"form-group\", className, {\n      error: touched[field.name] && errors[field.name]\n    })}\n  >\n    {label && (\n      <label className=\"form-label\" htmlFor={field.name}>\n        {label}\n      </label>\n    )}\n    <textarea\n      className={classNames(\"form-control\", {\n        \"is-invalid\": touched[field.name] && errors[field.name]\n      })}\n      placeholder={placeholder}\n      {...field}\n      {...props}\n    />\n    {touched[field.name] && errors[field.name] && (\n      <div className=\"invalid-feedback\">{errors[field.name]}</div>\n    )}\n  </div>\n);\n\nexport default Textarea;\n","import { uploadUrl } from \"../constants\";\n\nexport const uploadImages = (files = []) => {\n  const fd = new FormData();\n  Object.values(files).forEach((file) => {\n    fd.append(\"picture\", file);\n  });\n\n  return fetch(uploadUrl, {\n    body: fd,\n    method: \"post\"\n  });\n};\n","import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport Input from \"components/core/form-controls/Input\";\nimport Select from \"components/core/form-controls/Select\";\nimport Textarea from \"components/core/form-controls/Textarea\"\nimport { getCategories} from 'graphql/category';\nimport {  useMutation, useQuery } from '@apollo/client';\nimport {uploadImages} from 'graphql/upload'\nimport {createProduct} from 'graphql/products'\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\"),\n    price: Yup.string().required(\"Price is required!\"),\n    shippingCharges: Yup.string().required(\"Shipping Charges is required!\"),\n    wholeSalePrice:Yup.string().required(\"Price is required!\"),\n    subCategory: Yup.string().required(\"Sub Category is required!\"),\n    productDescription: Yup.string().required(\"Product Description is required!\"),\n});\n\nconst CreateProduct = () => {\n  const { loading:isLoading, error, data = {} } = useQuery(getCategories);\n  const [submitLogin] = useMutation(createProduct);\n  const{categories = []} = data\n\n  return (\n    <Formik\n  \n      initialValues={{\n        name: \"\",\n        price: \"\",\n        wholeSalePrice:\"\",\n        category: [],\n        subCategory:\"\",\n        shippingCharges:\"\",\n        localShippingCharges:\"\",\n        images:[],\n        productDescription:\"\",\n        file:[]\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n         await submitLogin({ variables:\n            values\n          });\n          resetForm();\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {({values,setFieldValue}) => (\n        <Form   className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Product Name\"\n            component={Input}\n          />\n          <Field\n            name=\"price\"\n            type=\"text\"\n            placeholder=\"Price\"\n            component={Input}\n          />\n            <Field\n            name=\"wholeSalePrice\"\n            type=\"text\"\n            placeholder=\"Whole Sale Price\"\n            component={Input}\n          />\n           <Field\n            name=\"localShippingCharges\"\n            type=\"text\"\n            placeholder=\"Local Shipping Charges\"\n            component={Input}\n          />\n            <Field\n            name=\"shippingCharges\"\n            type=\"text\"\n            placeholder=\"Shipping Charges\"\n            component={Input}\n          />\n          \n          <Field\n            name=\"productDescription\"\n            type=\"text\"\n            placeholder=\"Product Description\"\n            component={Textarea}\n          />\n            <Field\n            name=\"category\"\n            type=\"text\"\n            placeholder=\"Category\"\n            component={Select}\n            options={categories.map(c => ({name:c.name, value: c.subCategories, label:c.name}))}\n          />\n           <Field\n            name=\"subCategory\"\n            type=\"text\"\n            placeholder=\"Sub Category\"\n            component={Select}\n            options={(values.category|| []).map(c => ({name:c.name, value: c.id, label:c.name}))}\n          />\n           <Field\n            name=\"file\"\n            type=\"file\"\n            value={undefined}\n            placeholder=\"Images\"\n            component={Input}\n            multiple\n            accept=\"image/*, video/*\"\n            onChange={(event) => {\n              setFieldValue(\"file\", event.currentTarget.files);\n            }}\n          />\n           \n           <button disabled={values.file.length === 0 || values.images.length !== 0} className=\"auth-button block\" onClick={async (e) => {\n              e.preventDefault()\n              e.stopPropagation();\n             const result =  await uploadImages(values.file);\n            const {data:{files = [ ]}} = await result.json()\n             setFieldValue(\"images\", files);\n            }}>\n            Upload Image\n          </button>\n          <button className=\"auth-button block\" disabled={values.images.length === 0} onClick={() => {}}>\n            Create Product\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateProduct;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"contexts/auth\";\nimport Input from \"components/core/form-controls/Input\";\nimport {createCategory} from 'graphql/category';\nimport {  useMutation, useLazyQuery } from '@apollo/client';\nimport {uploadImages} from 'graphql/upload'\n\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\"),\n});\n\nconst CreateCategory = () => {\n  const authDispatch = useContext(AuthDispatchContext);\n  const history = useHistory();\n  const location = useLocation();\n  const [submitCategory] = useMutation(createCategory);\n\n \n  return (\n    <Formik\n    \n      initialValues={{\n        name: \"\",\n        categoryImage:'',\n        file:[]\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          await submitCategory({ variables:\n            values\n          });\n          resetForm();\n          // getContext({ variables:\n          //   {token:userData?.data?.login?.token}\n          // });\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {({isSubmitting,values, setFieldValue}) => (\n        <Form className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Category Name\"\n            component={Input}\n          />\n       \n           <Field\n            name=\"categoryImage\"\n            type=\"file\"\n            placeholder=\"Category Image\"\n            component={Input}\n            value={undefined}\n    \n            accept=\"image/png, image/gif, image/jpeg\"\n            onChange={(event) => {\n              setFieldValue(\"file\", event.currentTarget.files);\n            }}\n           \n          />\n\n            <button disabled={values.file.length === 0 || values.categoryImage} className=\"auth-button block\" onClick={async (e) => {\n              e.preventDefault()\n              e.stopPropagation();\n             const result =  await uploadImages(values.file);\n            const {data:{files = [ ]}} = await result.json()\n             setFieldValue(\"categoryImage\", files[0]);\n            }}>\n            Upload Image\n          </button>\n\n  \n          <button className=\"auth-button block\" disabled={isSubmitting || !values.categoryImage} onClick={() => {}}>\n            Create Category\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateCategory;\n","import { gql } from \"@apollo/client\";\n\nexport const createSubCategory = gql`\n  mutation createSubCategory($name: String!, $category: String!) {\n    createSubCategory(name: $name, category: $category) {\n      id\n      name\n      category\n      categoryDetails {\n        name\n        id\n        categoryImage\n      }\n    }\n  }\n`;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"contexts/auth\";\nimport Input from \"components/core/form-controls/Input\";\nimport Select from \"components/core/form-controls/Select\";\nimport {getCategories} from 'graphql/category';\nimport {createSubCategory} from 'graphql/subCategory'\nimport {  useMutation, useQuery } from '@apollo/client';\n\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\"),\n    category: Yup.string().required(\"Category is required!\"),\n});\n\nconst CreateProduct = () => {\n  const authDispatch = useContext(AuthDispatchContext);\n  const { loading:isLoading, error, data = {} } = useQuery(getCategories);\n  const history = useHistory();\n  const location = useLocation();\n  const [submitLogin] = useMutation(createSubCategory);\n\n const{categories = []} = data\n\n  return (\n    <Formik\n\n      initialValues={{\n        name: \"\",\n       \n        category:\"\"\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          await submitLogin({ variables:\n            values\n          });\n          resetForm();\n          // getContext({ variables:\n          //   {token:userData?.data?.login?.token}\n          // });\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form  className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Sub Category Name\"\n            component={Input}\n          />\n        \n           <Field\n            name=\"category\"\n            type=\"text\"\n            placeholder=\"Category\"\n            component={Select}\n            options={categories.map(c => ({name:c.name, value: c.id, label:c.name}))}\n          />\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Create Sub Category\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateProduct;\n","import Table from \"react-bootstrap/Table\";\nimport { confirmAlert } from 'react-confirm-alert';\n\nfunction ResponsiveTable({ data, onEdit, onDelete, disableActions}) {\n  const keys = data[0];\n  const { __typename, ...restKeys } = keys;\n  const getColumnValue = (item, key) =>{\n  if(typeof item[key] === 'string'){\n    return item[key]\n  } else if(Array.isArray(item[key])){\n    return typeof item[key][0] === 'string'? item[key].join(' , '): item[key].map(item => item.name).join(' , ')\n  } else if(typeof item[key] === 'object'){\n    return item[key].name\n  }\n    \n  }\n  return (\n    <Table responsive=\"sm\">\n      <thead>\n        <tr>\n          {Object.keys(restKeys).map((key, index) => (\n            <th key={key + index}>{key}</th>\n          ))}\n         {!disableActions && <th>Edit</th>}\n         {!disableActions && <th>Delete</th>}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((item, index) => (\n          <tr key={index}>\n            {Object.keys(restKeys).map((key) => (\n              <td key={key + index}>{getColumnValue(item, key)}</td>\n            ))}\n            {!disableActions && <td>\n              {\" \"}\n              {\n                <button\n                  className=\"outline edit-icon\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                     onEdit(item)\n                  }}\n                >\n                  <i className=\"rsc-icon-edit\" />\n                </button>\n              }\n            </td>}\n            {!disableActions && <td>\n              {\" \"}\n              {\n               <button className=\"outline delete-icon\" onClick={async (e) => {\n                e.stopPropagation()\n                confirmAlert({\n                  title: 'Confirm to Delete',\n                  message: 'Are you sure you want to delete?.',\n                  buttons: [\n                    {\n                      label: 'Yes',\n                      onClick: () => (onDelete(item))\n                    },\n                    {\n                      label: 'No',\n                      onClick: () => ({})\n                    }\n                  ]\n                });\n               \n               }}>\n                    <i className=\"rsc-icon-delete\" />\n                  </button>\n              }\n            </td>}\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default ResponsiveTable;\n","import { gql } from \"@apollo/client\";\n\nexport const createPermission = gql`\n  mutation createPermission($name: String!) {\n    createPermission(name: $name) {\n      id\n      name\n    }\n  }\n`;\n\nexport const getPermissionById = gql`\n  query permission($id: ID!) {\n    permission(id: $id) {\n      id\n      name\n    }\n  }\n`;\n\nexport const getPermissions = gql`\n  query permissions {\n    permissions {\n      id\n      name\n    }\n  }\n`;\n\nexport const deletePermission = gql`\n  mutation deletePermission($id: ID!) {\n    deletePermission(id: $id)\n  }\n`;\n\nexport const updatePermission = gql`\n  mutation editPermission($name: String!, $id: ID!) {\n    editPermission(id: $id, name: $name)\n  }\n`;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport Table from \"components/core/Table\"\nimport {  useQuery,useMutation } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  getPermissions,\n  deletePermission\n} from \"graphql/permissions\";\nimport { CommonStateContext } from \"contexts/common\";\n\nconst Permissions = () => {\n  const { searchKeyword } = useContext(CommonStateContext);\n  const history = useHistory();\n  const { loading:isLoading, error, data = {}, refetch } = useQuery(getPermissions);\n  const params = new Proxy(new URLSearchParams(history.location.search), {\n    get: (searchParams, prop) => searchParams.get(prop),\n  });\n  useEffect(()=>{refetch()},[])\n  const [deleteItem] = useMutation(deletePermission);\n  const [previewData, setPreviewData] = useState(null)\n  const [modalActive, setModalActive] = useState(false)\n  const { products} = data ;\n  let productsList =\n    products &&\n    products.filter((product) => {\n      return (\n        product.name.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n        !searchKeyword\n      );\n    });\n\n    if(params.productId){\n      productsList = productsList && productsList.filter(product => product.id === params.productId)\n    }\n\n\n  const onPreview = (data) =>{\n    setPreviewData(data)\n    setModalActive(true)\n  }\n  const closeModal = () => {\n    setModalActive(false);\n  }\n  const handleOnDelete = async (data) =>{\n    await deleteItem({ variables:\n      {id:data.id}\n    })\n    await refetch()\n  }\n  const handleOnEdit = (data) => {\n    history.push(`/editPermission/${data.id}`);\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"products-wrapper\">\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n          <Link to=\"/createPermission\" className=\"btn btn-dark\" style={{width:'200px'}}>\n            Create Permission\n          </Link>\n        <Table onEdit={handleOnEdit} data={data.permissions} onDelete={handleOnDelete}/>\n        \n      </div>\n  );\n};\n\nexport default Permissions;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport Input from \"components/core/form-controls/Input\";\nimport {createPermission} from 'graphql/permissions'\nimport {  useMutation } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\n\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\"),\n});\n\nconst CreateProduct = () => {\n  const [submitLogin] = useMutation(createPermission);\n  const history = useHistory()\n\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          await submitLogin({ variables:\n            values\n          });\n          resetForm();\n          history.push('/permissions')\n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form  className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Permission Name\"\n            component={Input}\n          />\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Create Permission\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateProduct;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport Input from \"components/core/form-controls/Input\";\nimport {updatePermission, getPermissionById} from 'graphql/permissions'\nimport {  useMutation, useQuery } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\"),\n});\n\nconst CreateProduct = ({match}) => {\n  const [submitLogin] = useMutation(updatePermission);\n  const history = useHistory()\n  const  { loading:isLoading, error, data = {} } = useQuery(getPermissionById, {variables:{\n    id: match?.params?.id\n  }});\n  \n  if(isLoading){\n    return null\n  }\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        ...data.permission,\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          await submitLogin({ variables:\n            values\n          });\n          resetForm();\n          history.push('/permissions')\n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form  className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Permission Name\"\n            component={Input}\n          />\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Update Permission\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateProduct;\n","import { gql } from \"@apollo/client\";\n\nexport const createRole = gql`\n  mutation createRole($name: String!, $permissions: [String]) {\n    createRole(name: $name, permissions: $permissions) {\n      id\n      name\n    }\n  }\n`;\n\nexport const getRoles = gql`\n  query roles {\n    roles {\n      id\n      name\n      permissions\n      permissionsDetails {\n        name\n      }\n    }\n  }\n`;\n\nexport const getRoleById = gql`\n  query role($id: ID!) {\n    role(id: $id) {\n      id\n      name\n      permissionsDetails {\n        name\n        id\n      }\n    }\n  }\n`;\n\nexport const deleteRole = gql`\n  mutation deleteRole($id: ID!) {\n    deleteRole(id: $id)\n  }\n`;\n\nexport const updateRole = gql`\n  mutation editRole($name: String!, $permissions: [String], $id: ID!) {\n    editRole(id: $id, name: $name, permissions: $permissions)\n  }\n`;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"contexts/auth\";\nimport Input from \"components/core/form-controls/Input\";\nimport Select from \"components/core/form-controls/Select\";\nimport {getPermissions} from 'graphql/permissions';\nimport {createRole} from 'graphql/roles'\nimport {  useMutation, useQuery } from '@apollo/client';\n\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\")\n});\n\nconst CreateProduct = () => {\n  const authDispatch = useContext(AuthDispatchContext);\n  const { loading:isLoading, error, data = {} } = useQuery(getPermissions);\n  const history = useHistory();\n  const location = useLocation();\n  const [submitLogin] = useMutation(createRole);\n\n const{permissions = []} = data\n\n  return (\n    <Formik\n\n      initialValues={{\n        name: \"\",\n        permissions:\"\"\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          await submitLogin({ variables:\n            values\n          });\n          resetForm();\n          history.push('/roles')\n          // getContext({ variables:\n          //   {token:userData?.data?.login?.token}\n          // });\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form  className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Role Name\"\n            component={Input}\n          />\n        \n           <Field\n            name=\"permissions\"\n            type=\"text\"\n            placeholder=\"Permissions\"\n            component={Select}\n            options={permissions.map(c => ({name:c.name, value: c.id, label:c.name}))}\n            multi\n          />\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Create Role\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateProduct;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"contexts/auth\";\nimport Input from \"components/core/form-controls/Input\";\nimport Select from \"components/core/form-controls/Select\";\nimport {getPermissions} from 'graphql/permissions';\nimport {updateRole,getRoleById} from 'graphql/roles'\nimport {  useMutation, useQuery } from '@apollo/client';\n\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\")\n});\n\nconst CreateProduct = ({match}) => {\n  const authDispatch = useContext(AuthDispatchContext);\n  const { loading:isLoading, error, data = {} } = useQuery(getPermissions);\n\n  const  { loading:roleDataLoading,  data:roleData = {} } = useQuery(getRoleById, {variables:{\n    id: match?.params?.id\n  }});\n\n  const history = useHistory();\n  const location = useLocation();\n  const [submitLogin] = useMutation(updateRole);\n  if(roleDataLoading){\n    return null\n  }\n const{permissions = []} = data\n\n  return (\n    <Formik\n\n      initialValues={{\n        name: \"\",\n        permissions:\"\",\n        ...roleData.role,\n        permissions: roleData.role.permissionsDetails.map(permission => permission.id)\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          await submitLogin({ variables:\n            values\n          });\n          resetForm();\n          history.push('/roles')\n          // getContext({ variables:\n          //   {token:userData?.data?.login?.token}\n          // });\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form  className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Role Name\"\n            component={Input}\n          />\n        \n           <Field\n            name=\"permissions\"\n            type=\"text\"\n            placeholder=\"Permissions\"\n            component={Select}\n            options={permissions.map(c => ({name:c.name, value: c.id, label:c.name}))}\n            multi\n          />\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Update Role\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateProduct;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport Table from \"components/core/Table\"\nimport {  useQuery,useMutation } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  getRoles,\n  deleteRole\n} from \"graphql/roles\";\nimport { CommonStateContext } from \"contexts/common\";\n\nconst Roles = () => {\n  const { searchKeyword } = useContext(CommonStateContext);\n  const history = useHistory();\n  const { loading:isLoading, error, data = {}, refetch } = useQuery(getRoles);\n  const params = new Proxy(new URLSearchParams(history.location.search), {\n    get: (searchParams, prop) => searchParams.get(prop),\n  });\n  useEffect(()=>{refetch()},[])\n  const [deleteItem] = useMutation(deleteRole);\n  const [previewData, setPreviewData] = useState(null)\n  const [modalActive, setModalActive] = useState(false)\n  const { products} = data ;\n  let productsList =\n    products &&\n    products.filter((product) => {\n      return (\n        product.name.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n        !searchKeyword\n      );\n    });\n\n    if(params.productId){\n      productsList = productsList && productsList.filter(product => product.id === params.productId)\n    }\n\n\n  const onPreview = (data) =>{\n    setPreviewData(data)\n    setModalActive(true)\n  }\n  const closeModal = () => {\n    setModalActive(false);\n  }\n  const handleOnDelete = async (data) =>{\n    await deleteItem({ variables:\n      {id:data.id}\n    })\n    await refetch()\n  }\n  const handleOnEdit = (data) => {\n    history.push(`/editRole/${data.id}`);\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"products-wrapper\">\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n          <Link to=\"/createRole\" className=\"btn btn-dark\" style={{width:'200px'}}>\n            Create Role\n          </Link>\n        <Table onEdit={handleOnEdit} data={data.roles} onDelete={handleOnDelete}/>\n        \n      </div>\n  );\n};\n\nexport default Roles;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"contexts/auth\";\nimport Input from \"components/core/form-controls/Input\";\nimport {updateCategory, getCategoryById} from 'graphql/category';\nimport {  useMutation, useQuery } from '@apollo/client';\nimport {uploadImages} from 'graphql/upload'\n\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\"),\n});\n\nconst EditCategory = ({match}) => {\n  const authDispatch = useContext(AuthDispatchContext);\n  const history = useHistory();\n  const location = useLocation();\n  const [submitCategory] = useMutation(updateCategory);\n  const  { loading:isLoading, error, data = {} } = useQuery(getCategoryById, {variables:{\n    id: match?.params?.categoryId\n  }});\n\n  if(isLoading){\n    return null\n  }\n \n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        categoryImage:'',\n        file:[],\n        ...data.category,\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          await submitCategory({ variables:\n            {...values, categoryId:match?.params?.categoryId}\n          });\n          \n          history.push(\"/\");\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {({isSubmitting,values, setFieldValue}) => (\n        <Form className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Category Name\"\n            component={Input}\n          />\n       \n           <Field\n            name=\"categoryImage\"\n            type=\"file\"\n            placeholder=\"Category Image\"\n            component={Input}\n            value={undefined}\n    \n            accept=\"image/png, image/gif, image/jpeg\"\n            onChange={(event) => {\n              setFieldValue(\"file\", event.currentTarget.files);\n            }}\n           \n          />\n\n            <button disabled={values.file.length === 0} className=\"auth-button block\" onClick={async (e) => {\n              e.preventDefault()\n              e.stopPropagation();\n             const result =  await uploadImages(values.file);\n            const {data:{files = [ ]}} = await result.json()\n             setFieldValue(\"categoryImage\", files[0]);\n            }}>\n            Upload Image\n          </button>\n\n  \n          <button className=\"auth-button block\" disabled={isSubmitting || !values.categoryImage} onClick={() => {}}>\n            Update Category\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default EditCategory;\n","import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport Input from \"components/core/form-controls/Input\";\nimport Select from \"components/core/form-controls/Select\";\nimport Textarea from \"components/core/form-controls/Textarea\"\nimport { getCategories} from 'graphql/category';\nimport { useHistory } from \"react-router-dom\";\nimport {  useMutation, useQuery } from '@apollo/client';\nimport {uploadImages} from 'graphql/upload'\nimport {updateProduct, getProductById} from 'graphql/products'\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\"),\n    price: Yup.string().required(\"Price is required!\"),\n    shippingCharges: Yup.string().required(\"Shipping Charges is required!\"),\n    wholeSalePrice:Yup.string().required(\"Price is required!\"),\n    subCategory: Yup.string().required(\"Sub Category is required!\"),\n    productDescription: Yup.string().required(\"Product Description is required!\"),\n});\n\nconst EditProduct = ({match}) => {\n  const { loading:isLoading, error, data = {} } = useQuery(getCategories);\n  const [submitLogin] = useMutation(updateProduct);\n  const{categories = []} = data\n  const history = useHistory();\n  const  { loading:productLoading, data: productData  ={} } = useQuery(getProductById, {variables:{\n    id: match?.params?.id\n  }});\n  if(productLoading || isLoading){\n    return null\n  }\n  const {product:{subCategoryDetails , ...restProductData}={}} = productData \n\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        price: \"\",\n        wholeSalePrice:\"\",\n        category: \"\",\n        subCategory:\"\",\n        shippingCharges:\"\",\n        localShippingCharges:\"\",\n        images:[],\n        productDescription:\"\",\n        file:[],\n        ...restProductData,\n        category: subCategoryDetails.categoryDetails\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n         await submitLogin({ variables:\n            values,\n             id:match?.params?.id\n          });\n          history.push(`/products/${subCategoryDetails.categoryDetails.id}`);\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {({values,setFieldValue}) => (\n        <Form className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Product Name\"\n            component={Input}\n          />\n          <Field\n            name=\"price\"\n            type=\"text\"\n            placeholder=\"Price\"\n            component={Input}\n          />\n            <Field\n            name=\"wholeSalePrice\"\n            type=\"text\"\n            placeholder=\"Whole Sale Price\"\n            component={Input}\n          />\n              <Field\n            name=\"localShippingCharges\"\n            type=\"text\"\n            placeholder=\"Local Shipping Charges\"\n            component={Input}\n          />\n            <Field\n            name=\"shippingCharges\"\n            type=\"text\"\n            placeholder=\"Shipping Charges\"\n            component={Input}\n          />\n        \n          <Field\n            name=\"productDescription\"\n            type=\"text\"\n            placeholder=\"Product Description\"\n            component={Textarea}\n          />\n            <Field\n            name=\"category\"\n            type=\"text\"\n            placeholder=\"Category\"\n            component={Select}\n          \n\n            options={categories.map(c => ({name:c.name, value: c, label:c.name}))}\n          />\n           <Field\n            name=\"subCategory\"\n            type=\"text\"\n            placeholder=\"Sub Category\"\n            component={Select}\n            options={(values.category?.subCategories || []).map(c => ({name:c.name, value: c.id, label:c.name}))}\n          />\n           <Field\n            name=\"file\"\n            type=\"file\"\n            value={undefined}\n            placeholder=\"Images\"\n            component={Input}\n            multiple\n            accept=\"image/*, video/*\"\n            onChange={(event) => {\n              setFieldValue(\"file\", event.currentTarget.files);\n            }}\n          />\n           \n           <button disabled={values.file.length === 0} className=\"auth-button block\" onClick={async (e) => {\n              e.preventDefault()\n              e.stopPropagation();\n             const result =  await uploadImages(values.file);\n            const {data:{files = [ ]}} = await result.json()\n             setFieldValue(\"images\", files);\n            }}>\n            Upload Image\n          </button>\n          <button className=\"auth-button block\" disabled={values.images.length === 0} onClick={() => {}}>\n            Update Product\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default EditProduct;\n","import { gql } from \"@apollo/client\";\n\nexport const createUserRole = gql`\n  mutation createRoleMapping($userId: ID!, $roleIds: [String]) {\n    createRoleMapping(roleIds: $roleIds, userId: $userId) {\n      id\n    }\n  }\n`;\n\nexport const getRolesMapping = gql`\n  query rolesMapping {\n    rolesMapping {\n      id\n      userId\n      roleIds\n      userDetails {\n        id\n        phone\n        name\n      }\n      roleDetails {\n        id\n        permissions\n        name\n        permissionsDetails {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const getRoleById = gql`\n  query role($id: ID!) {\n    role(id: $id) {\n      id\n      name\n      permissionsDetails {\n        name\n        id\n      }\n    }\n  }\n`;\n\nexport const deleteRole = gql`\n  mutation deleteRole($id: ID!) {\n    deleteRole(id: $id)\n  }\n`;\n\nexport const updateRole = gql`\n  mutation editRole($name: String!, $permissions: [String], $id: ID!) {\n    editRole(id: $id, name: $name, permissions: $permissions)\n  }\n`;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport Table from \"components/core/Table\"\nimport {  useQuery,useMutation } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  getRolesMapping,\n  deleteRole\n} from \"graphql/rolesMapping\";\nimport { CommonStateContext } from \"contexts/common\";\n\nconst Roles = () => {\n  const { searchKeyword } = useContext(CommonStateContext);\n  const history = useHistory();\n  const { loading:isLoading, error, data = {}, refetch } = useQuery(getRolesMapping);\n  const params = new Proxy(new URLSearchParams(history.location.search), {\n    get: (searchParams, prop) => searchParams.get(prop),\n  });\n  useEffect(()=>{refetch()},[])\n  const [deleteItem] = useMutation(deleteRole);\n  const [previewData, setPreviewData] = useState(null)\n  const [modalActive, setModalActive] = useState(false)\n  const { products} = data ;\n  let productsList =\n    products &&\n    products.filter((product) => {\n      return (\n        product.name.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n        !searchKeyword\n      );\n    });\n\n    if(params.productId){\n      productsList = productsList && productsList.filter(product => product.id === params.productId)\n    }\n\n\n  const onPreview = (data) =>{\n    setPreviewData(data)\n    setModalActive(true)\n  }\n  const closeModal = () => {\n    setModalActive(false);\n  }\n  const handleOnDelete = async (data) =>{\n    // await deleteItem({ variables:\n    //   {id:data.id}\n    // })\n    // await refetch()\n  }\n  const handleOnEdit = (data) => {\n    // history.push(`/editRole/${data.id}`);\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"products-wrapper\">\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n  return (\n    <div  className=\"container\">\n          <Link to=\"/createUserRole\" className=\"btn btn-dark\" style={{width:'200px'}}>\n            Create User Role\n          </Link>\n        <Table disableActions onEdit={handleOnEdit} data={data.rolesMapping} onDelete={handleOnDelete}/>\n        \n      </div>\n  );\n};\n\nexport default Roles;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"contexts/auth\";\nimport Input from \"components/core/form-controls/Input\";\nimport Select from \"components/core/form-controls/Select\";\nimport {createUserRole} from 'graphql/rolesMapping'\nimport {  useMutation, useQuery } from '@apollo/client';\nimport {getRoles} from \"graphql/roles\"\nimport {getUsers} from \"graphql/auth\"\n\nconst ProductSchema = Yup.object().shape({\n});\n\nconst CreateProduct = () => {\n  const authDispatch = useContext(AuthDispatchContext);\n  const { loading:isLoading, error, data = {} } = useQuery(getRoles);\n  const { loading:userLoading,  data:userData = {} } = useQuery(getUsers);\n  const history = useHistory();\n  const location = useLocation();\n  const [submitLogin] = useMutation(createUserRole);\n  if(userLoading, isLoading){\n    return null\n  }\n const{roles = []} = data\n const{users = []} = userData\n\n  return (\n    <Formik\n\n      initialValues={{\n        userId: \"\",\n        roleIds:\"\"\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          await submitLogin({ variables:\n            values\n          });\n          resetForm();\n          history.push('/userRoles')\n          // getContext({ variables:\n          //   {token:userData?.data?.login?.token}\n          // });\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form  className=\"form-container\">\n         <Field\n            name=\"userId\"\n            type=\"text\"\n            placeholder=\"User\"\n            component={Select}\n            options={users.map(c => ({name:c.name, value: c.id, label:`${c.name} - ${c.phone}`}))}\n          />\n        \n           <Field\n            name=\"roleIds\"\n            type=\"text\"\n            placeholder=\"Roles\"\n            component={Select}\n            options={roles.map(c => ({name:c.name, value: c.id, label:c.name}))}\n            multi\n          />\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Create User Role\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateProduct;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport AuthProvider from \"contexts/auth\";\nimport CommonProvider from \"contexts/common\";\nimport ProductsProvider from \"contexts/products\";\nimport CartProvider from \"contexts/cart\";\nimport CheckoutProvider from \"contexts/checkout\";\nimport RouteWrapper from \"layouts/RouteWrapper\";\nimport AuthLayout from \"layouts/AuthLayout\";\nimport CommonLayout from \"layouts/CommonLayout\";\nimport AuthPage from \"pages/auth\";\nimport HomePage from \"pages/home\";\nimport ProductPage from \"pages/products\";\nimport RegisterPage from \"pages/register\";\nimport CheckoutPage from \"pages/checkout\";\nimport CreateProductPage from \"pages/createproduct\";\nimport CategoryPage from \"pages/createCategory\";\nimport SubCategoryPage from \"pages/createSubCategory\";\nimport PermissionPage from \"pages/permissions\";\nimport CreatePermissionPage from \"pages/createPermission\";\nimport EditPermissionPage from \"pages/editPermission\";\nimport CreateRolePage from \"pages/createRole\";\nimport EditRolePage from \"pages/editRole\";\nimport RolePage from \"pages/roles\";\nimport EditCategoryPage from \"pages/editcategory\";\nimport EditProductPage from \"pages/editproduct\";\nimport UserRolePage from \"pages/userRoles\";\nimport CreateUserRolePage from \"pages/createUserRole\";\nimport { endpoint } from \"./constants\";\nimport \"assets/scss/style.scss\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { Permissions } from \"./constants/common\";\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: endpoint\n});\n\nexport const navConfig = [\n  {\n    id: \"home\",\n    title: \"Home\",\n    path: \"/\",\n    exact: true,\n    component: HomePage,\n    layout: CommonLayout,\n    showNav: true\n  },\n  {\n    id: \"checkout\",\n    path: \"/checkout\",\n    component: CheckoutPage,\n    layout: CommonLayout,\n    showNav: false\n  },\n  {\n    id: \"auth\",\n    path: \"/auth\",\n    component: AuthPage,\n    layout: AuthLayout,\n    showNav: false\n  },\n  {\n    id: \"register\",\n    path: \"/register\",\n    component: RegisterPage,\n    layout: AuthLayout,\n    showNav: false\n  },\n  {\n    id: \"createProduct\",\n    title: \"Create Product\",\n    path: \"/createProduct\",\n    component: CreateProductPage,\n    layout: CommonLayout,\n    permissions: [Permissions.CREATE_PRODUCT],\n    showNav: true,\n    isPrivate: true\n  },\n  {\n    id: \"createCategory\",\n    title: \"Create Category\",\n    path: \"/createCategory\",\n    component: CategoryPage,\n    layout: CommonLayout,\n    permissions: [Permissions.CREATE_CATEGORY],\n    showNav: true,\n    isPrivate: true\n  },\n  {\n    id: \"createSubCategory\",\n    title: \"Create Sub Category\",\n    path: \"/createSubCategory\",\n    component: SubCategoryPage,\n    layout: CommonLayout,\n    permissions: [Permissions.CREATE_CATEGORY],\n    showNav: true,\n    isPrivate: true\n  },\n  {\n    id: \"productByCategory\",\n    path: \"/products/:categoryId\",\n    component: ProductPage,\n    layout: CommonLayout,\n    showNav: false\n  },\n  {\n    id: \"categoryById\",\n    path: \"/categories/:categoryId\",\n    component: EditCategoryPage,\n    layout: CommonLayout,\n    showNav: false,\n    isPrivate: true,\n    permissions: [Permissions.CREATE_CATEGORY]\n  },\n  {\n    id: \"editProduct\",\n    path: \"/editProduct/:id\",\n    component: EditProductPage,\n    layout: CommonLayout,\n    showNav: false,\n    isPrivate: true,\n    permissions: [Permissions.CREATE_PRODUCT]\n  },\n  {\n    id: \"createRole\",\n    title: \"Create Role\",\n    path: \"/createRole\",\n    component: CreateRolePage,\n    layout: CommonLayout,\n    showNav: false,\n    isPrivate: true,\n    permissions: [Permissions.CREATE_ROLE]\n  },\n  {\n    id: \"roles\",\n    title: \"Roles\",\n    path: \"/roles\",\n    component: RolePage,\n    layout: CommonLayout,\n    showNav: true,\n    isPrivate: true,\n    permissions: [Permissions.CREATE_ROLE]\n  },\n  {\n    id: \"editRole\",\n    path: \"/editRole/:id\",\n    component: EditRolePage,\n    layout: CommonLayout,\n    showNav: false,\n    isPrivate: true,\n    permissions: [Permissions.CREATE_ROLE]\n  },\n  {\n    id: \"permissions\",\n    title: \"Permissions\",\n    path: \"/permissions\",\n    component: PermissionPage,\n    layout: CommonLayout,\n    showNav: true,\n    isPrivate: true,\n    permissions: [Permissions.CREATE_PERMISSION]\n  },\n  {\n    id: \"createPermission\",\n    title: \"Create Permission\",\n    path: \"/createPermission\",\n    component: CreatePermissionPage,\n    layout: CommonLayout,\n    permissions: [Permissions.CREATE_PERMISSION],\n    showNav: false,\n    isPrivate: true\n  },\n  {\n    id: \"editPermission\",\n    path: \"/editPermission/:id\",\n    component: EditPermissionPage,\n    permissions: [Permissions.CREATE_PERMISSION],\n    layout: CommonLayout,\n    showNav: false,\n    isPrivate: true\n  },\n  {\n    id: \"userRoles\",\n    title: \"User Roles\",\n    path: \"/userRoles\",\n    component: UserRolePage,\n    layout: CommonLayout,\n    showNav: true,\n    isPrivate: true,\n    permissions: [Permissions.CREATE_USER_ROLE]\n  },\n  {\n    id: \"createUserRole\",\n    title: \"Create User Role\",\n    path: \"/createUserRole\",\n    component: CreateUserRolePage,\n    layout: CommonLayout,\n    showNav: false,\n    isPrivate: true,\n    permissions: [Permissions.CREATE_USER_ROLE]\n  }\n];\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <AuthProvider>\n        <CommonProvider>\n          <ProductsProvider>\n            <CartProvider>\n              <CheckoutProvider>\n                <Router>\n                  <Switch>\n                    {navConfig.map((nav) => (\n                      <RouteWrapper\n                        key={nav.id}\n                        path={nav.path}\n                        exact={!!nav.exact}\n                        component={nav.component}\n                        layout={nav.layout}\n                        isPrivate={!!nav.isPrivate}\n                        permissions={nav.permissions}\n                      />\n                    ))}\n                  </Switch>\n                </Router>\n              </CheckoutProvider>\n            </CartProvider>\n          </ProductsProvider>\n        </CommonProvider>\n      </AuthProvider>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}