{"version":3,"sources":["hooks/useLocalStorage.js","contexts/auth.jsx","contexts/common.jsx","contexts/products.jsx","contexts/cart.jsx","contexts/checkout.jsx","layouts/RouteWrapper.jsx","layouts/AuthLayout.jsx","constants.js","components/Navbar.jsx","components/Footer.jsx","layouts/CommonLayout.jsx","components/core/form-controls/Input.jsx","graphql/auth.js","pages/auth.jsx","constants/common.js","utils.js","components/Product.jsx","graphql/category.js","pages/home.jsx","components/QuickView.jsx","graphql/products.js","pages/products.jsx","pages/register.jsx","pages/checkout.jsx","components/core/form-controls/Select.jsx","components/core/form-controls/Textarea.jsx","graphql/upload.js","pages/createproduct.jsx","pages/editProfile.jsx","pages/createCategory.jsx","graphql/subCategory.js","pages/createSubCategory.jsx","components/core/Table.jsx","graphql/permissions.js","pages/permissions.jsx","pages/createPermission.jsx","pages/editPermission.jsx","graphql/roles.js","pages/createRole.jsx","pages/editRole.jsx","pages/roles.jsx","pages/editcategory.jsx","pages/editproduct.jsx","graphql/rolesMapping.js","pages/userRoles.jsx","pages/createUserRole.jsx","App.js","index.js"],"names":["useLocalStorage","key","initialValue","React","useState","item","window","localStorage","getItem","JSON","parse","error","console","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","initialState","isLoggedIn","user","isLoggingIn","AuthStateContext","createContext","AuthDispatchContext","reducer","state","action","type","payload","Error","signOut","dispatch","clear","AuthProvider","children","persistedUser","setPersistedUser","persistedUserState","_get","length","hasPermissions","permissions","allPermissions","context","roleDetails","reduce","result","concat","permissionsDetails","map","permission","name","some","prmsn","includes","useReducer","useEffect","Provider","isSearchBarOpen","searchKeyword","CommonStateContext","CommonDispatchContext","CommonProvider","products","isLoading","isLoaded","ProductsStateContext","ProductsDispatchContext","ProductsProvider","isCartOpen","items","CartStateContext","CartDispatchContext","id","cartItem","cartItems","quantity","filter","cartItemId","CartProvider","persistedCartItems","setPersistedCartItems","persistedCartState","CHECKOUT_STEPS","step","shippingAddress","CheckoutStateContext","CheckoutDispatchContext","setCheckoutStep","CheckoutProvider","checkoutState","setCheckoutState","persistedCheckoutState","RouteWrapper","Component","component","Layout","layout","isPrivate","rest","useContext","render","props","to","pathname","from","location","AuthLayout","className","src","alt","imagesUrl","uploadUrl","Header","navConfig","authState","history","useHistory","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","width","Toggle","Collapse","Nav","nav","showNav","path","title","href","download","onClick","e","preventDefault","push","reload","Footer","currentYear","Date","getFullYear","target","rel","CommonLayout","style","minHeight","Input","label","placeholder","field","form","touched","errors","classNames","htmlFor","login","gql","createUser","updateUser","getUsers","getUserById","LoginSchema","Yup","shape","password","required","phone","AuthPage","authDispatch","useLocation","useMutation","submitLogin","useLazyQuery","getContext","data","loading","fromUrl","goToForgotPassword","goToRegister","signInSuccess","userData","signIn","initialValues","validationSchema","onSubmit","values","resetForm","variables","token","Permissions","getMedia","image","index","onPreview","autoPlay","indexOf","controls","ProductCard","onDelete","onEdit","categoryImage","images","price","previewFile","shippingCharges","wholeSalePrice","localShippingCharges","stopPropagation","confirmAlert","message","buttons","margin","fontSize","number","createCategory","updateCategory","getCategories","getCategoryById","deleteCategory","Home","useQuery","categoryLoading","categories","refetch","deleteItem","handleOnDelete","handleOnEdit","QuickView","modalElement","useRef","document","addEventListener","handleClickOutside","bind","removeEventListener","event","domNode","findDOMNode","current","contains","closeModal","product","uniqueImages","Set","openModal","ref","showArrows","infiniteLoop","showThumbs","showStatus","autoFocus","productDescription","dangerouslySetInnerHTML","__html","getProducts","getProductById","updateProduct","createProduct","deleteProduct","color","Math","random","toString","Product","match","categoryId","params","Proxy","URLSearchParams","search","get","searchParams","prop","previewData","setPreviewData","modalActive","setModalActive","category","productsList","toLowerCase","productId","subCategoryId","subCategory","log","subCategories","textDecoration","maxHeight","background","sc","companyName","address","Register","submitRegister","goToLogin","AddressSchema","fullName","phoneNumber","matches","min","max","addressLine","city","code","country","LoginStep","checkoutDispatch","userDetails","disabled","AddressStep","handleSaveAddress","addressData","err","PaymentStep","Checkout","totalItems","handleClickTimeline","nextStep","done","active","Select","options","multi","setFieldValue","isMulti","option","find","onChange","Textarea","uploadImages","files","fd","FormData","Object","forEach","file","append","fetch","body","method","ProductSchema","CreateProduct","c","undefined","multiple","accept","currentTarget","json","EditProfile","userId","userLoading","userProfileData","CreateCategory","submitCategory","isSubmitting","createSubCategory","ResponsiveTable","disableActions","keys","restKeys","__typename","getColumnValue","Array","isArray","join","Table","responsive","createPermission","getPermissionById","getPermissions","deletePermission","updatePermission","createRole","getRoles","getRoleById","deleteRole","updateRole","roleDataLoading","roleData","role","Roles","roles","EditCategory","EditProduct","productLoading","subCategoryDetails","restProductData","categoryDetails","createUserRole","getRolesMapping","rolesMapping","rm","users","roleIds","client","ApolloClient","cache","InMemoryCache","uri","exact","HomePage","CheckoutPage","RegisterPage","CreateProductPage","CategoryPage","SubCategoryPage","ProductPage","EditCategoryPage","EditProductPage","CreateRolePage","RolePage","EditRolePage","PermissionPage","CreatePermissionPage","EditPermissionPage","UserRolePage","CreateUserRolePage","EditProfilePage","App","ApolloProvider","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.30ea31f9.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import React, { useReducer, createContext, useEffect } from \"react\";\nimport _get from \"lodash.get\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\n\nconst initialState = {\n  isLoggedIn: false,\n  user: null,\n  isLoggingIn: false\n};\n\nexport const AuthStateContext = createContext();\nexport const AuthDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_REQUEST\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n        isLoggingIn: true\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: action.payload.user,\n        isLoggingIn: false\n      };\n    case \"LOGIN_FAILURE\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n        isLoggingIn: false\n      };\n    case \"LOGOUT_SUCCESS\":\n      return {\n        ...state,\n        ...initialState\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nexport const signIn = (dispatch, userData) => {\n  localStorage.setItem(\"user\", JSON.stringify(userData));\n  return dispatch({\n    type: \"LOGIN_SUCCESS\",\n    payload: {\n      user: userData\n    }\n  });\n};\n\nexport const signOut = (dispatch) => {\n  localStorage.clear();\n  return dispatch({\n    type: \"LOGOUT_SUCCESS\"\n  });\n};\n\nconst AuthProvider = ({ children }) => {\n  const [persistedUser, setPersistedUser] = useLocalStorage(\"user\", null);\n  const persistedUserState = {\n    ...initialState,\n    user: persistedUser,\n    isLoggedIn: _get(persistedUser, \"username\", \"\").length > 0,\n    hasPermissions: (permissions) =>{\n     const allPermissions =  persistedUser?.context?.roleDetails.reduce((result,item) =>{\n      result = result.concat(item.permissionsDetails.map(permission => permission.name))\n        return result\n     },[]) || []\n     return !permissions || (allPermissions||[]).some(prmsn => permissions.includes(prmsn));\n    }\n  };\n  const [state, dispatch] = useReducer(reducer, persistedUserState);\n\n  useEffect(() => {\n    setPersistedUser(state.user);\n  }, [state.isLoggedIn]);\n\n  return (\n    <AuthDispatchContext.Provider value={dispatch}>\n      <AuthStateContext.Provider value={state}>\n        {children}\n      </AuthStateContext.Provider>\n    </AuthDispatchContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","import React, { useReducer, createContext } from \"react\";\n\nconst initialState = {\n  isSearchBarOpen: false,\n  searchKeyword: \"\"\n};\n\nexport const CommonStateContext = createContext();\nexport const CommonDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE_SEARCH_BAR\":\n      return {\n        ...state,\n        isSearchBarOpen: !state.isSearchBarOpen\n      };\n    case \"SET_SEARCH_KEYWORD\":\n      return {\n        ...state,\n        searchKeyword: action.payload.searchKeyword\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst CommonProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <CommonDispatchContext.Provider value={dispatch}>\n      <CommonStateContext.Provider value={state}>\n        {children}\n      </CommonStateContext.Provider>\n    </CommonDispatchContext.Provider>\n  );\n};\n\nexport const toggleSearchBar = (dispatch) => {\n  return dispatch({\n    type: \"TOGGLE_SEARCH_BAR\"\n  });\n};\n\nexport const setSearchKeyword = (dispatch, searchKeyword) => {\n  return dispatch({\n    type: \"SET_SEARCH_KEYWORD\",\n    payload: {\n      searchKeyword: searchKeyword\n    }\n  });\n};\n\nexport default CommonProvider;\n","import React, { useReducer, createContext } from \"react\";\nimport axios from \"axios\";\n\nconst initialState = {\n  products: null,\n  isLoading: false,\n  isLoaded: false\n};\n\nexport const ProductsStateContext = createContext();\nexport const ProductsDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_PRODUCTS_REQUEST\":\n      return {\n        ...state,\n        isLoading: true,\n        isLoaded: false\n      };\n    case \"GET_PRODUCTS_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isLoaded: true,\n        products: action.payload.products\n      };\n    case \"GET_PRODUCTS_FAILURE\":\n      return {\n        ...state,\n        products: null,\n        isLoading: false,\n        isLoaded: false\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst ProductsProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <ProductsDispatchContext.Provider value={dispatch}>\n      <ProductsStateContext.Provider value={state}>\n        {children}\n      </ProductsStateContext.Provider>\n    </ProductsDispatchContext.Provider>\n  );\n};\n\nexport const getProducts = (dispatch) => {\n  dispatch({\n    type: \"GET_PRODUCTS_REQUEST\"\n  });\n  const url =\n    \"https://res.cloudinary.com/sivadass/raw/upload/v1535817394/json/products.json\";\n  axios\n    .get(url)\n    .then((response) => {\n      dispatch({\n        type: \"GET_PRODUCTS_SUCCESS\",\n        payload: {\n          products: response.data\n        }\n      });\n    })\n    .catch((error) => {\n      console.error(error);\n      dispatch({\n        type: \"GET_PRODUCTS_FAILURE\"\n      });\n    });\n};\n\nexport default ProductsProvider;\n","import React, { useReducer, createContext, useEffect } from \"react\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\n\nconst initialState = {\n  isCartOpen: false,\n  items: []\n};\n\nexport const CartStateContext = createContext();\nexport const CartDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE_CART_POPUP\":\n      return {\n        ...state,\n        isCartOpen: !state.isCartOpen\n      };\n    case \"ADD_TO_CART\":\n      const id = action.payload.cartItem.id;\n      const isOld = state.items.map((item) => item.id).includes(id);\n      let cartItems = null;\n      if (isOld) {\n        const items = state.items.map((item) => {\n          if (item.id === id) {\n            return {\n              ...item,\n              quantity: item.quantity + 1\n            };\n          }\n          return item;\n        });\n        cartItems = [...items];\n      } else {\n        cartItems = [...state.items, action.payload.cartItem];\n      }\n      return {\n        ...state,\n        items: cartItems\n      };\n    case \"REMOVE_FROM_CART\":\n      return {\n        ...state,\n        items: state.items.filter(\n          (item) => item.id !== action.payload.cartItemId\n        )\n      };\n    case \"CLEAR_CART\":\n      return {\n        ...state,\n        ...initialState\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nexport const toggleCartPopup = (dispatch) => {\n  return dispatch({\n    type: \"TOGGLE_CART_POPUP\"\n  });\n};\n\nexport const addToCart = (dispatch, cartItem) => {\n  return dispatch({\n    type: \"ADD_TO_CART\",\n    payload: {\n      cartItem: cartItem\n    }\n  });\n};\n\nexport const removeFromCart = (dispatch, cartItemId) => {\n  return dispatch({\n    type: \"REMOVE_FROM_CART\",\n    payload: {\n      cartItemId: cartItemId\n    }\n  });\n};\n\nexport const clearCart = (dispatch) => {\n  return dispatch({\n    type: \"CLEAR_CART\"\n  });\n};\n\nconst CartProvider = ({ children }) => {\n  const [persistedCartItems, setPersistedCartItems] = useLocalStorage(\n    \"cartItems\",\n    []\n  );\n  const persistedCartState = {\n    isCartOpen: false,\n    items: persistedCartItems || []\n  };\n  const [state, dispatch] = useReducer(reducer, persistedCartState);\n  useEffect(() => {\n    setPersistedCartItems(state.items);\n  }, [JSON.stringify(state.items)]);\n  return (\n    <CartDispatchContext.Provider value={dispatch}>\n      <CartStateContext.Provider value={state}>\n        {children}\n      </CartStateContext.Provider>\n    </CartDispatchContext.Provider>\n  );\n};\n\nexport default CartProvider;\n","import React, { useReducer, createContext, useEffect } from \"react\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\n\nexport const CHECKOUT_STEPS = {\n  AUTH: \"auth\",\n  SHIPPING: \"shipping\",\n  PAYMENT: \"payment\"\n};\n\nconst initialState = {\n  step: CHECKOUT_STEPS.AUTH,\n  shippingAddress: null\n};\n\nexport const CheckoutStateContext = createContext();\nexport const CheckoutDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_CHECKOUT_STEP\":\n      return {\n        ...state,\n        step: action.payload.step\n      };\n    case \"SET_SHIPPING_ADDRESS\":\n      return {\n        ...state,\n        shippingAddress: action.payload.shippingAddress\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst CheckoutProvider = ({ children }) => {\n  const [checkoutState, setCheckoutState] = useLocalStorage(\"checkout\", null);\n  const persistedCheckoutState = {\n    ...initialState,\n    shippingAddress: checkoutState || {}\n  };\n  const [state, dispatch] = useReducer(reducer, persistedCheckoutState);\n\n  useEffect(() => {\n    setCheckoutState(state.shippingAddress);\n  }, [state.shippingAddress]);\n  return (\n    <CheckoutDispatchContext.Provider value={dispatch}>\n      <CheckoutStateContext.Provider value={state}>\n        {children}\n      </CheckoutStateContext.Provider>\n    </CheckoutDispatchContext.Provider>\n  );\n};\n\nexport const setCheckoutStep = (dispatch, step) => {\n  return dispatch({\n    type: \"SET_CHECKOUT_STEP\",\n    payload: {\n      step\n    }\n  });\n};\n\nexport const saveShippingAddress = (dispatch, shippingAddress) => {\n  dispatch({\n    type: \"SET_SHIPPING_ADDRESS\",\n    payload: {\n      shippingAddress\n    }\n  });\n  return setCheckoutStep(dispatch, CHECKOUT_STEPS.PAYMENT);\n};\n\nexport default CheckoutProvider;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthStateContext } from \"contexts/auth\";\n\nfunction RouteWrapper({\n  component: Component,\n  layout: Layout,\n  isPrivate = false,\n  permissions,\n  ...rest\n}) {\n  const { user, hasPermissions } = useContext(AuthStateContext);\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isPrivate && (!hasPermissions(permissions))) {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/auth\",\n                state: { from: props.location }\n              }}\n            />\n          );\n        }\n        return (\n          <Layout {...props}>\n            <Component {...props} />\n          </Layout>\n        );\n      }}\n    />\n  );\n}\n\nexport default RouteWrapper;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst AuthLayout = ({ children }) => {\n  return (\n    <div className=\"auth-container\">\n      <div className=\"wrapper\">\n        <div className=\"auth-brand\">\n          <Link to=\"/\">\n            <img\n              className=\"logo\"\n              src=\"/logo.png\"\n              alt=\"MB Group\"\n            />\n          </Link>\n        </div>\n        <div>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthLayout;\n","export const endpoint = \"https://api.mbgroup.shop/graphql\";\nexport const imagesUrl = \"https://api.mbgroup.shop/static\";\nexport const uploadUrl = \"https://api.mbgroup.shop/file/upload\";\nexport const apkName = \"1667891057438-picture.apk\";\n","import React, { useContext } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { imagesUrl, apkName } from \"../constants\";\nimport { AuthStateContext, signOut, AuthDispatchContext } from \"contexts/auth\";\n// import NavDropdown from 'react-bootstrap/NavDropdown';\n\nfunction Header({ navConfig }) {\n  const authState = useContext(AuthStateContext);\n  const dispatch = useContext(AuthDispatchContext);\n  const history = useHistory();\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand>\n          {\" \"}\n          <Link className=\"navbar-brand\" to=\"/\">\n            {\" \"}\n            <img className=\"logo\" src=\"/logo.png\" alt=\"MB Group\" width=\"75\" />\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"me-auto\">\n            {navConfig.map(\n              (nav) =>\n                nav.showNav &&\n                authState.hasPermissions(nav.permissions) && (\n                  <Link key={nav.id} className=\"nav-link\" to={nav.path}>\n                    {\" \"}\n                    {nav.title}\n                  </Link>\n                )\n            )}\n\n            {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Another action\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">\n                Separated link\n              </NavDropdown.Item>\n            </NavDropdown> */}\n          </Nav>\n          <Nav>\n            {authState.user && (\n              <a\n                className=\"nav-link\"\n                href={`${imagesUrl}/${apkName}`} //\"https://api.mbgroup.shop/static/1667891057438-picture.apk\"\n                download\n              >\n                Download Android App\n              </a>\n            )}\n            {!authState.user && (\n              <Link className=\"nav-link\" to=\"/auth\">\n                {\" \"}\n                <img width=\"35\" src=\"/login.png\" alt=\"login\" title=\"login\" />\n              </Link>\n            )}\n            {authState.user && (\n              <Link className=\"nav-link\" to=\"/editProfile\">\n                {\" \"}\n                <img width=\"35\" src=\"/user.png\" alt=\"user\" title=\"edit profile\" />\n              </Link>\n            )}\n            {authState.user && (\n              <a\n                className=\"nav-link\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  signOut(dispatch);\n                  history.push(\"/\");\n                  window.location.reload();\n                }}\n              >\n                {\" \"}\n                <img title=\"logout\" width=\"35\" src=\"/logout.png\" alt=\"logout\" />\n              </a>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => {\n  const currentYear = new Date().getFullYear();\n  return (\n    <footer>\n      <p className=\"footer-links\">\n        <a\n          href=\"https://github.com/sivadass/react-shopping-cart\"\n          target=\"_blank\" rel=\"noreferrer\"\n        >\n          View Source on Github\n        </a>\n        <span> / </span>\n        <a href=\"mailto:contact@sivadass.in\" target=\"_blank\" rel=\"noreferrer\">\n          Need any help?\n        </a>\n        \n      </p>\n      <p>\n        &copy; {currentYear} <strong>MB Group</strong> - Personalized Gift Store\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Header from 'components/Navbar'\nimport Footer from \"components/Footer\";\nimport {navConfig} from '../App'\n\nconst CommonLayout = ({ children }) => {\n  return (\n    <div className=\"common-layout\">\n      <Header navConfig={navConfig}/>\n      <main style={{minHeight:'75vh'}}>{children}</main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default CommonLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nconst Input = ({\n  type,\n  label,\n  placeholder,\n  className,\n  field,\n  form: { touched, errors },\n  ...props\n}) => (\n  <div\n    className={classNames(\"form-group\", className, {\n      error: touched[field.name] && errors[field.name]\n    })}\n  >\n    {label && (\n      <label className=\"form-label\" htmlFor={field.name}>\n        {label}\n      </label>\n    )}\n    <input\n      type={type}\n      className={classNames(\"form-control\", {\n        \"is-invalid\": touched[field.name] && errors[field.name]\n      })}\n      placeholder={placeholder}\n      {...field}\n      {...props}\n    />\n    {touched[field.name] && errors[field.name] && (\n      <div className=\"invalid-feedback\">{errors[field.name]}</div>\n    )}\n  </div>\n);\n\nexport default Input;\n","import { gql } from \"@apollo/client\";\n\nexport const login = gql`\n  mutation login($phone: String!, $password: String!) {\n    login(phone: $phone, password: $password) {\n      token\n      userId\n    }\n  }\n`;\n\nexport const context = gql`\n  query context($token: String!) {\n    context(token: $token) {\n      userId\n      userDetails {\n        name\n      }\n      roleDetails {\n        permissionsDetails {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const createUser = gql`\n  mutation createUser(\n    $phone: String!\n    $name: String!\n    $password: String!\n    $address: String\n    $companyName: String\n  ) {\n    createUser(\n      phone: $phone\n      name: $name\n      password: $password\n      address: $address\n      companyName: $companyName\n    ) {\n      id\n      phone\n      name\n      companyName\n      address\n    }\n  }\n`;\n\nexport const updateUser = gql`\n  mutation editUser(\n    $phone: String!\n    $name: String!\n    $address: String\n    $companyName: String\n    $id: ID!\n  ) {\n    editUser(\n      id: $id\n      phone: $phone\n      name: $name\n      address: $address\n      companyName: $companyName\n    )\n  }\n`;\n\nexport const getUsers = gql`\n  query users {\n    users {\n      id\n      phone\n      name\n      companyName\n      address\n    }\n  }\n`;\nexport const getUserById = gql`\n  query user($id: ID!) {\n    user(id: $id) {\n      id\n      phone\n      name\n      companyName\n      address\n    }\n  }\n`;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"contexts/auth\";\nimport Input from \"components/core/form-controls/Input\";\nimport {login, context} from 'graphql/auth';\nimport {  useMutation, useLazyQuery } from '@apollo/client';\n\nconst LoginSchema = Yup.object().shape({\n  password: Yup.string().required(\"Password is required!\"),\n  phone: Yup.string().required(\"Mobile Number is required!\")\n});\n\nconst AuthPage = () => {\n  const authDispatch = useContext(AuthDispatchContext);\n  const history = useHistory();\n  const location = useLocation();\n  const [submitLogin] = useMutation(login);\n  const [\n    getContext, \n    { loading, data }\n  ] = useLazyQuery(context);\n  const fromUrl = _get(location, \"state.from.pathname\");\n\n  const goToForgotPassword = (e) => {\n    e.preventDefault();\n  };\n\n  const goToRegister = (e) => {\n    e.preventDefault();\n    history.push(\"/register\");\n  };\n\n  useEffect(()=>{\n    if(data){\n      signInSuccess(data);\n    }\n  },[data]);\n\n  const signInSuccess = (userData) => {\n    signIn(authDispatch, userData);\n    if (fromUrl) {\n      history.push(fromUrl);\n    } else {\n      history.push(\"/\");\n    }\n    window.location.reload()\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        phone: \"\",\n        password: \"\"\n      }}\n      validationSchema={LoginSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          const userData = await submitLogin({ variables:\n            values\n          });\n          getContext({ variables:\n            {token:userData?.data?.login?.token}\n          });\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form>\n          <Field\n            name=\"phone\"\n            type=\"text\"\n            placeholder=\"Mobile Number\"\n            component={Input}\n          />\n          <Field\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            component={Input}\n          />\n\n          <p>\n            <a href=\"/#\" onClick={goToForgotPassword}>\n              Forgot Password?\n            </a>\n          </p>\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Login\n          </button>\n\n          <p>\n            New here?{\" \"}\n            <a href=\"/#\" onClick={goToRegister}>\n              Sign Up Now!\n            </a>\n          </p>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AuthPage;\n","export const phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nexport const Permissions = {\n  EDIT_CATEGORY: \"EDIT_CATEGORY\",\n  DELETE_CATEGORY: \"DELETE_CATEGORY\",\n  CREATE_CATEGORY: \"CREATE_CATEGORY\",\n  EDIT_PRODUCT: \"EDIT_PRODUCT\",\n  DELETE_PRODUCT: \"DELETE_PRODUCT\",\n  CREATE_PRODUCT: \"CREATE_PRODUCT\",\n  CREATE_PERMISSION: \"CREATE_PERMISSION\",\n  CREATE_ROLE: \"CREATE_ROLE\",\n  CREATE_USER_ROLE: \"CREATE_USER_ROLE\",\n  RESELLER: \"RESELLER\",\n  SHOPKEEPER: \"SHOPKEEPER\"\n};\n","import { imagesUrl } from \"./constants\";\nexport const getMedia = ({ image, index, onPreview, data, autoPlay }) => {\n  if (image.indexOf(\".mp4\") > -1) {\n    return (\n      <video\n        key={index}\n        style={{ width: \"100%\" }}\n        autoPlay={autoPlay}\n        onClick={() => onPreview && onPreview(data)}\n        controls\n      >\n        <source src={`${imagesUrl}/${image}`} type=\"video/mp4\" />\n        <source src={`${imagesUrl}/${image}`} type=\"video/ogg\" />\n        Your browser does not support HTML video.\n      </video>\n    );\n  }\n  return (\n    <img\n      key={index}\n      src={`${imagesUrl}/${image}`}\n      alt={image}\n      onClick={() => onPreview && onPreview(data)}\n    />\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { CartDispatchContext, addToCart } from \"contexts/cart\";\nimport { AuthStateContext } from \"contexts/auth\";\nimport { imagesUrl} from \"../constants\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport {Permissions} from '../constants/common'\nimport ReactWhatsapp from 'react-whatsapp';\nimport {getMedia}from 'utils'\n\nconst ProductCard = ({ data, onPreview , onClick, onDelete, onEdit}) => {\n  const [isAdded, setIsAdded] = useState(false);\n  const dispatch = useContext(CartDispatchContext);\n  const authState = useContext(AuthStateContext);\n  const { categoryImage,images, name, price,previewFile, shippingCharges, wholeSalePrice, localShippingCharges } = data;\n\n  const handleAddToCart = () => {\n    const product = { ...data, quantity: 1 };\n    addToCart(dispatch, product);\n    setIsAdded(true);\n    setTimeout(() => {\n      setIsAdded(false);\n    }, 3500);\n  };\n\n  return (\n    <div className={`product ${onClick?'category':''}`} onClick={()=>onClick && onClick(data)}>\n      <div>\n      <div className=\"product-image\">\n      {getMedia({image: categoryImage || (images && images[0]), index:1, onPreview, data,autoPlay:false})}\n      </div>\n      {name && <h4 className=\"product-name\">{name}</h4>}\n    <div> {price && <p className=\"product-price\">{authState.hasPermissions([Permissions.RESELLER, Permissions.SHOPKEEPER])?  wholeSalePrice:price}</p>}\n     {shippingCharges && <p className=\"product-price shipping-charges\">{shippingCharges || 0} (Shipping Charges)</p>}\n\n     {localShippingCharges && authState.hasPermissions([Permissions.RESELLER, Permissions.SHOPKEEPER]) && <p className=\"product-price shipping-charges\">{localShippingCharges || 0} (Local Shipping Charges)</p>}     </div>\n     {authState.hasPermissions([Permissions.DELETE_CATEGORY, Permissions.DELETE_PRODUCT]) && <button className=\"outline delete-icon\" onClick={async (e) => {\n      e.stopPropagation()\n      confirmAlert({\n        title: 'Confirm to Delete',\n        message: 'Are you sure you want to delete?.',\n        buttons: [\n          {\n            label: 'Yes',\n            onClick: () => onDelete(data)\n          },\n          {\n            label: 'No',\n            onClick: () => ({})\n          }\n        ]\n      });\n     \n     }}>\n          <i className=\"rsc-icon-delete\" />\n        </button>}\n        {authState.hasPermissions([Permissions.EDIT_CATEGORY, Permissions.EDIT_PRODUCT]) && <button className=\"outline edit-icon\" onClick={(e) => {\n      e.stopPropagation()\n      onEdit(data)\n     }}>\n          <i className=\"rsc-icon-edit\" />\n        </button>}\n     {false && <div className=\"product-action\">\n        <button\n          className={!isAdded ? \"\" : \"added\"}\n          type=\"button\"\n          onClick={handleAddToCart}\n        >\n          {!isAdded ? \"ADD TO CART\" : \"✔ ADDED\"}\n        </button>\n      </div>}\n      </div>\n      {previewFile && <a\n                className=\"nav-link\"\n                style={{margin:'10px', fontSize: '10px'}}\n                href={`${imagesUrl}/${previewFile}`} //\"https://api.mbgroup.shop/static/1667891057438-picture.apk\"\n                download\n                target={\"_blank\"} rel=\"noreferrer\"\n              >\n                <img src=\"/download.png\" width={35} alt=\"download\"/>Choose your design\n              </a>}\n            \n      {onPreview && <ReactWhatsapp className=\"whatsapp\" number={authState.hasPermissions([Permissions.RESELLER, Permissions.SHOPKEEPER])?'+91-9582611877':'+91-9818855029'} message={`${window.location.href}?productId=${data.id}`} ><img src=\"/whatsapp.png\" width=\"50\" alt=\"whatsapp\"/></ReactWhatsapp>}\n    </div>\n  );\n};\n\nexport default ProductCard;\n","import { gql } from \"@apollo/client\";\n\nexport const createCategory = gql`\n  mutation createCategory($name: String!, $categoryImage: String!) {\n    createCategory(name: $name, categoryImage: $categoryImage) {\n      id\n      name\n      categoryImage\n    }\n  }\n`;\n\nexport const updateCategory = gql`\n  mutation editCategory(\n    $name: String!\n    $categoryImage: String\n    $categoryId: ID!\n  ) {\n    editCategory(\n      categoryId: $categoryId\n      name: $name\n      categoryImage: $categoryImage\n    )\n  }\n`;\n\nexport const getCategories = gql`\n  query categories {\n    categories {\n      id\n      name\n      categoryImage\n      subCategories {\n        id\n        name\n        category\n      }\n    }\n  }\n`;\n\nexport const getCategoryById = gql`\n  query category($id: ID!) {\n    category(id: $id) {\n      id\n      name\n      categoryImage\n      subCategories {\n        id\n        name\n        category\n      }\n    }\n  }\n`;\n\nexport const deleteCategory = gql`\n  mutation deleteCategory($id: ID!) {\n    deleteCategory(id: $id)\n  }\n`;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport ProductCard from \"components/Product\";\nimport {  useQuery, useMutation } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\nimport { getCategories, deleteCategory } from \"graphql/category\";\n\nconst Home = () => {\n  const history = useHistory();\n  const {loading:categoryLoading, data :{categories}  = {}, refetch} = useQuery(getCategories);\n  const [deleteItem] = useMutation(deleteCategory);\n  useEffect(()=>{refetch()},[])\n\n  const onPreview = (data) =>{\n    history.push(`/products/${data.id}`);\n  }\n  const handleOnDelete = async (data) =>{\n    await deleteItem({ variables:\n      {id:data.id}\n    })\n    await refetch()\n  }\n\n  const handleOnEdit = (data) => {\n    history.push(`/categories/${data.id}`);\n  }\n\n  if (categoryLoading) {\n    return (\n      <div className=\"products-wrapper\">\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n  return (\n    <div className=\"products-wrapper\">\n      <div className=\"container products\"> \n      { \n        categories && categories.map((data) => {\n          return <ProductCard onEdit={handleOnEdit} onDelete={handleOnDelete}  key={data.id} data={data} onClick={()=>onPreview(data)}/>;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useRef, useEffect,useContext } from \"react\";\nimport { findDOMNode } from \"react-dom\";\nimport { AuthStateContext } from \"contexts/auth\";\nimport {getMedia} from 'utils'\nimport { Carousel } from \"react-responsive-carousel\";\n\nconst QuickView = (props) => {\n    const modalElement = useRef();\n    const authState = useContext(AuthStateContext);\n  \n  useEffect(() => {\n    document.addEventListener(\n      \"click\",\n      handleClickOutside.bind(this),\n      true\n    );\n    return ()=>{\n        document.removeEventListener(\n            \"click\",\n            handleClickOutside.bind(this),\n            true\n          );\n    }\n  },[])\n\n\n const handleClickOutside =(event) => {\n    const domNode = findDOMNode(modalElement.current);\n    if (!domNode || !domNode.contains(event.target)) {\n      props.closeModal();\n    }\n  }\n\n const handleClose = () => {\n    props.closeModal();\n  }\n  \n  const {categoryImage, images} = props.product\n  const uniqueImages = [...new Set(images)]\n    return (\n      <div\n        className={\n          props.openModal ? \"modal-wrapper active\" : \"modal-wrapper\"\n        }\n      >\n        <div className=\"modal1\" ref={modalElement}>\n          <button\n            type=\"button\"\n            className=\"close\"\n            onClick={handleClose.bind(this)}\n          >\n            &times;\n          </button>\n          <div className=\"quick-view\">\n            <div className=\"quick-view-image\">\n      <Carousel showArrows={false} infiniteLoop showThumbs={false} showStatus={true} autoFocus={false} >\n              {uniqueImages.map((image,index)=>getMedia({image,index, autoPlay:false}))}\n            </Carousel>\n              {props.product.productDescription &&<p className=\"product-description\" dangerouslySetInnerHTML={{__html:props.product.productDescription}}></p>}\n            </div>\n            <div className=\"quick-view-details\">\n              <span className=\"product-name\">{props.product.name}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  \n}\n\nexport default QuickView;","import { gql } from \"@apollo/client\";\n\nexport const getProducts = gql`\n  query productsAndSubCategories($categoryId: ID!) {\n    products: productsByCategory(categoryId: $categoryId) {\n      id\n      name\n      price\n      wholeSalePrice\n      images\n      productDescription\n      subCategory\n      previewFile\n      shippingCharges\n      localShippingCharges\n      subCategoryDetails {\n        id\n        name\n        category\n        categoryDetails {\n          id\n          name\n          categoryImage\n        }\n      }\n    }\n    category(id: $categoryId) {\n      id\n      name\n      categoryImage\n      subCategories {\n        id\n        name\n        category\n      }\n    }\n  }\n`;\nexport const getProductById = gql`\n  query product($id: ID!) {\n    product(id: $id) {\n      id\n      name\n      price\n      wholeSalePrice\n      images\n      productDescription\n      subCategory\n      shippingCharges\n      localShippingCharges\n      previewFile\n      subCategoryDetails {\n        id\n        name\n        category\n        categoryDetails {\n          id\n          name\n          categoryImage\n          subCategories {\n            id\n            name\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const updateProduct = gql`\n  mutation editProduct(\n    $id: ID!\n    $name: String!\n    $price: String!\n    $images: [String]!\n    $subCategory: String!\n    $wholeSalePrice: String!\n    $productDescription: String!\n    $shippingCharges: String!\n    $localShippingCharges: String\n    $previewFile: String\n  ) {\n    editProduct(\n      id: $id\n      name: $name\n      price: $price\n      images: $images\n      subCategory: $subCategory\n      wholeSalePrice: $wholeSalePrice\n      productDescription: $productDescription\n      shippingCharges: $shippingCharges\n      localShippingCharges: $localShippingCharges\n      previewFile: $previewFile\n    )\n  }\n`;\n\nexport const createProduct = gql`\n  mutation createProduct(\n    $name: String!\n    $price: String!\n    $images: [String]!\n    $subCategory: String!\n    $wholeSalePrice: String!\n    $productDescription: String!\n    $shippingCharges: String!\n    $localShippingCharges: String\n    $previewFile: String\n  ) {\n    createProduct(\n      name: $name\n      price: $price\n      images: $images\n      subCategory: $subCategory\n      wholeSalePrice: $wholeSalePrice\n      productDescription: $productDescription\n      shippingCharges: $shippingCharges\n      localShippingCharges: $localShippingCharges\n      previewFile: $previewFile\n    ) {\n      id\n      name\n      price\n      wholeSalePrice\n      images\n      subCategory\n      productDescription\n      shippingCharges\n      localShippingCharges\n      previewFile\n    }\n  }\n`;\n\nexport const deleteProduct = gql`\n  mutation deleteProduct($id: ID!) {\n    deleteProduct(id: $id)\n  }\n`;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport ProductCard from \"components/Product\";\nimport QuickView from \"components/QuickView\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { getProducts, deleteProduct } from \"graphql/products\";\nimport { CommonStateContext } from \"contexts/common\";\nimport { Link } from \"react-router-dom\";\nconst color = \"#\" + (((1 << 24) * Math.random()) | 0).toString(16);\nconst Product = ({ match }) => {\n  const { searchKeyword } = useContext(CommonStateContext);\n  const history = useHistory();\n  const {\n    loading: isLoading,\n    error,\n    data = {},\n    refetch\n  } = useQuery(getProducts, {\n    variables: { categoryId: match?.params?.categoryId }\n  });\n  const params = new Proxy(new URLSearchParams(history.location.search), {\n    get: (searchParams, prop) => searchParams.get(prop)\n  });\n  useEffect(() => {\n    refetch();\n  }, []);\n  const [deleteItem] = useMutation(deleteProduct);\n  const [previewData, setPreviewData] = useState(null);\n  const [modalActive, setModalActive] = useState(false);\n  const { products, category } = data;\n  let productsList =\n    products &&\n    products.filter((product) => {\n      return (\n        product.name.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n        !searchKeyword\n      );\n    });\n\n  if (params.productId) {\n    productsList =\n      productsList &&\n      productsList.filter((product) => product.id === params.productId);\n  }\n  if (params.subCategoryId) {\n    productsList =\n      productsList &&\n      productsList.filter(\n        (product) => product.subCategory === params.subCategoryId\n      );\n  }\n\n  const onPreview = (data) => {\n    setPreviewData(data);\n    setModalActive(true);\n  };\n  const closeModal = () => {\n    setModalActive(false);\n  };\n  const handleOnDelete = async (data) => {\n    await deleteItem({ variables: { id: data.id } });\n    await refetch();\n  };\n  const handleOnEdit = (data) => {\n    history.push(`/editProduct/${data.id}`);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"products-wrapper\">\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n  console.log(category.subCategories);\n  return (\n    <div className=\"products-wrapper container\">\n      <div className=\" products\">\n        <Link\n          style={{\n            color: \"black\",\n            textDecoration: \"none\",\n            maxHeight: '100px'\n          }}\n          to={`/products/${match?.params?.categoryId}`}\n        >\n          {\" \"}\n          <span className=\"sub-category-icon\">\n            <label style={{ background: color }} className=\"sub-category-label\">\n              A\n            </label>\n            <h5 style={{ color: color }} className=\"sub-category-text\">\n              All\n            </h5>\n          </span>\n        </Link>\n        {category.subCategories.map((sc, index) => {\n          return (\n            <Link\n              style={{\n                color: \"black\",\n                textDecoration: \"none\",\n                maxHeight: '100px'\n              }}\n              to={`/products/${match?.params?.categoryId}?subCategoryId=${sc.id}`}\n            >\n              {\" \"}\n              <span className=\"sub-category-icon\">\n                <label\n                  style={{ background: color }}\n                  className=\"sub-category-label\"\n                >\n                  {sc.name[0]}\n                </label>\n                <h5 style={{ color: color }} className=\"sub-category-text\">\n                  {sc.name}\n                </h5>\n              </span>\n            </Link>\n          );\n        })}\n      </div>\n      <div className=\"products total-products-wrapper\"><label className=\"total-products\"> Total {productsList.length} Products</label></div>\n      <div className=\" products\">\n        {products &&\n          productsList.map((data) => {\n            return (\n              <ProductCard\n                onEdit={handleOnEdit}\n                onDelete={handleOnDelete}\n                onPreview={onPreview}\n                key={data.id}\n                data={data}\n              />\n            );\n          })}\n      </div>\n      {previewData && (\n        <QuickView\n          product={previewData}\n          openModal={modalActive}\n          closeModal={closeModal}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Product;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport Input from \"components/core/form-controls/Input\";\nimport { createUser } from \"graphql/auth\";\nimport { useMutation } from \"@apollo/client\";\n\nconst LoginSchema = Yup.object().shape({\n  password: Yup.string().required(\"Password is required!\"),\n  phone: Yup.string().required(\"Mobile Number is required!\"),\n  name: Yup.string().required(\"Name is required!\"),\n  companyName: Yup.string().required(\"Company Name is required!\"),\n  address: Yup.string().required(\"Address is required!\")\n});\n\nconst Register = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const [submitRegister] = useMutation(createUser);\n\n  const fromUrl = _get(location, \"state.from.pathname\");\n\n  const goToLogin = (e) => {\n    e.preventDefault();\n    history.push(\"/auth\");\n  };\n\n  const registerSuccess = () => {\n    if (fromUrl) {\n      history.push(fromUrl);\n    } else {\n      history.push(\"/auth\");\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        phone: \"\",\n        password: \"\",\n        name: \"\",\n        companyName: \"\"\n      }}\n      validationSchema={LoginSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          const userData = await submitRegister({ variables: values });\n          if (userData) {\n            registerSuccess();\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form>\n          <Field\n            name=\"phone\"\n            type=\"text\"\n            placeholder=\"Mobile Number\"\n            component={Input}\n          />\n          <Field name=\"name\" type=\"text\" placeholder=\"Name\" component={Input} />\n          <Field\n            name=\"companyName\"\n            type=\"text\"\n            placeholder=\"Company Name / Shopkeeper Name\"\n            component={Input}\n          />\n          <Field\n            name=\"address\"\n            type=\"text\"\n            placeholder=\"Address\"\n            component={Input}\n          />\n          <Field\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            component={Input}\n          />\n\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Register\n          </button>\n\n          <p>\n            Already Registered?{\" \"}\n            <a href=\"/#\" onClick={goToLogin}>\n              Login Now!\n            </a>\n          </p>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Register;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport {\n  CheckoutStateContext,\n  CheckoutDispatchContext,\n  CHECKOUT_STEPS,\n  setCheckoutStep,\n  saveShippingAddress\n} from \"contexts/checkout\";\nimport { CartStateContext } from \"contexts/cart\";\nimport { AuthStateContext, AuthDispatchContext, signOut } from \"contexts/auth\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport Input from \"components/core/form-controls/Input\";\nimport { phoneRegExp } from \"constants/common\";\n\nconst AddressSchema = Yup.object().shape({\n  fullName: Yup.string().required(\"Full Name is required\"),\n  phoneNumber: Yup.string()\n    .required(\"Phone Number is required\")\n    .matches(phoneRegExp, \"Phone Number is not a valid 10 digit number\")\n    .min(10, \"Phone Number is too short\")\n    .max(10, \"Phone Number is too long\"),\n  addressLine: Yup.string().required(\"Door No. & Street is required!\"),\n  city: Yup.string().required(\"City is required!\"),\n  state: Yup.string().required(\"State is required!\"),\n  code: Yup.string().required(\"ZIP/Postal code is required!\"),\n  country: Yup.string().required(\"Country is required!\")\n});\n\nconst LoginStep = () => {\n  const history = useHistory();\n  const { user, isLoggedIn } = useContext(AuthStateContext);\n  const authDispatch = useContext(AuthDispatchContext);\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n  const handleContinueShopping = () => {\n    history.push(\"/\");\n  };\n  const handleLoginAsDiffUser = () => {\n    signOut(authDispatch);\n    history.push(\"/auth\");\n  };\n  const handleGotoLogin = () => {\n    history.push(\"/auth\");\n  };\n  const handleProceed = () => {\n    setCheckoutStep(checkoutDispatch, CHECKOUT_STEPS.SHIPPING);\n  };\n  return (\n    <div className=\"detail-container\">\n      <h2>Sign In now!</h2>\n      <div className=\"auth-message\">\n        {isLoggedIn ? (\n          <>\n            <p>\n              Logged in as <span>{user?.context?.userDetails?.name}</span>\n            </p>\n            <button onClick={() => handleLoginAsDiffUser()}>\n              Login as Different User\n            </button>\n          </>\n        ) : (\n          <>\n            <p>Please login to continue.</p>\n            <button onClick={() => handleGotoLogin()}>Login</button>\n          </>\n        )}\n      </div>\n      <div className=\"actions\">\n        <button className=\"outline\" onClick={() => handleContinueShopping()}>\n          <i className=\"rsc-icon-arrow_back\" /> Continue Shopping\n        </button>\n        <button disabled={!isLoggedIn} onClick={() => handleProceed()}>\n          Proceed\n          <i className=\"rsc-icon-arrow_forward\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst AddressStep = () => {\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n\n  const handleBackToLogin = () => {\n    setCheckoutStep(checkoutDispatch, CHECKOUT_STEPS.AUTH);\n  };\n  const handleSaveAddress = (addressData) => {\n    saveShippingAddress(checkoutDispatch, addressData);\n  };\n  return (\n    <div className=\"detail-container\">\n      <h2>Shipping Address</h2>\n      <Formik\n        initialValues={{\n          fullName: \"John Doe\",\n          phoneNumber: \"5552229876\",\n          addressLine: \"L1, Palm Residency\",\n          city: \"Kingston\",\n          state: \"New York\",\n          code: \"12401\",\n          country: \"United States\"\n        }}\n        validationSchema={AddressSchema}\n        onSubmit={async (values, { resetForm }) => {\n          try {\n            const addressData = { ...values };\n            resetForm();\n            handleSaveAddress(addressData);\n          } catch (err) {\n            console.error(err);\n          }\n        }}\n      >\n        {() => (\n          <Form>\n            <div className=\"field-group\">\n              <Field\n                name=\"fullName\"\n                type=\"text\"\n                placeholder=\"Full Name\"\n                component={Input}\n              />\n              <Field\n                name=\"phoneNumber\"\n                type=\"text\"\n                placeholder=\"Phone Number\"\n                component={Input}\n              />\n            </div>\n            <Field\n              name=\"addressLine\"\n              type=\"text\"\n              placeholder=\"Door No. & Street\"\n              component={Input}\n            />\n            <div className=\"field-group\">\n              <Field\n                name=\"city\"\n                type=\"text\"\n                placeholder=\"City\"\n                component={Input}\n              />\n              <Field\n                name=\"state\"\n                type=\"text\"\n                placeholder=\"State\"\n                component={Input}\n              />\n            </div>\n            <div className=\"field-group\">\n              <Field\n                name=\"code\"\n                type=\"text\"\n                placeholder=\"ZIP/Postal Code\"\n                component={Input}\n              />\n              <Field\n                name=\"country\"\n                type=\"text\"\n                placeholder=\"Country\"\n                component={Input}\n              />\n            </div>\n            <div className=\"actions\">\n              <button\n                type=\"button\"\n                className=\"outline\"\n                onClick={() => handleBackToLogin()}\n              >\n                <i className=\"rsc-icon-arrow_back\" /> Login in as Different User\n              </button>\n              <button type=\"submit\">\n                Save Address\n                <i className=\"rsc-icon-arrow_forward\" />\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst PaymentStep = () => {\n  const { shippingAddress } = useContext(CheckoutStateContext);\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n  const handleBackToAddress = () => {\n    setCheckoutStep(checkoutDispatch, CHECKOUT_STEPS.SHIPPING);\n  };\n  const handlePayment = () => {};\n  return (\n    <div className=\"detail-container\">\n      <h2>Payment</h2>\n      {/* <div>\n        <pre>{JSON.stringify(shippingAddress, null, 0)}</pre>\n      </div> */}\n      <div className=\"actions\">\n        <button\n          type=\"button\"\n          className=\"outline\"\n          onClick={() => handleBackToAddress()}\n        >\n          <i className=\"rsc-icon-arrow_back\" /> Back to Shipping Details\n        </button>\n        <button disabled={!shippingAddress} onClick={() => handlePayment()}>\n          Save Address\n          <i className=\"rsc-icon-arrow_forward\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst Checkout = () => {\n  const { items = [] } = useContext(CartStateContext);\n  const { isLoggedIn } = useContext(AuthStateContext);\n  const { step, shippingAddress } = useContext(CheckoutStateContext);\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n  const totalItems = items.length;\n\n  const handleClickTimeline = (nextStep) => {\n    setCheckoutStep(checkoutDispatch, nextStep);\n  };\n\n  return (\n    <div className=\"checkout-page\">\n      <div className=\"container1\">\n        <div className=\"order-details\">\n          <ul className=\"timeline\">\n            <li\n              className={classNames({\n                done: isLoggedIn,\n                active: step === CHECKOUT_STEPS.AUTH\n              })}\n              onClick={() => handleClickTimeline(CHECKOUT_STEPS.AUTH)}\n            >\n              <h2>Sign In</h2>\n              <i className=\"rsc-icon-check_circle\" />\n            </li>\n            <li\n              className={classNames({\n                done: shippingAddress !== null,\n                active: step === CHECKOUT_STEPS.SHIPPING\n              })}\n              onClick={() => handleClickTimeline(CHECKOUT_STEPS.SHIPPING)}\n            >\n              <h2>Shipping</h2>\n              <i className=\"rsc-icon-check_circle\" />\n            </li>\n            <li\n              className={classNames({\n                done: false,\n                active: step === CHECKOUT_STEPS.PAYMENT\n              })}\n              onClick={() => handleClickTimeline(CHECKOUT_STEPS.PAYMENT)}\n            >\n              <h2>Payment</h2>\n              <i className=\"rsc-icon-check_circle\" />\n            </li>\n          </ul>\n          {step === CHECKOUT_STEPS.AUTH && <LoginStep />}\n          {step === CHECKOUT_STEPS.SHIPPING && <AddressStep />}\n          {step === CHECKOUT_STEPS.PAYMENT && <PaymentStep />}\n        </div>\n        <div className=\"order-summary\">\n          <h2>\n            Summary\n            <span>{` (${totalItems}) Items`}</span>\n          </h2>\n          <ul className=\"cart-items\">\n            {items.map((product) => {\n              return (\n                <li className=\"cart-item\" key={product.name}>\n                  <img className=\"product-image\" src={product.image} />\n                  <div className=\"product-info\">\n                    <p className=\"product-name\">{product.name}</p>\n                    <p className=\"product-price\">{product.price}</p>\n                  </div>\n                  <div className=\"product-total\">\n                    <p className=\"quantity\">\n                      {`${product.quantity} ${\n                        product.quantity > 1 ? \"Nos.\" : \"No.\"\n                      }`}\n                    </p>\n                    <p className=\"amount\">{product.quantity * product.price}</p>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n\n          <ul className=\"total-breakup\">\n            <li>\n              <p>Subtotal</p>\n              <p>5000</p>\n            </li>\n            <li>\n              <p>Tax</p>\n              <p>5000</p>\n            </li>\n            <li>\n              <p>Shipping</p>\n              <p>5000</p>\n            </li>\n            <li>\n              <h2>Total</h2>\n              <h2>5000</h2>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport ReactSelect from \"react-select\";\n\nconst Select = ({\n  options,\n  multi = false,\n  type,\n  label,\n  placeholder,\n  field,\n  form: { touched, errors, setFieldValue },\n  required = false,\n  className,\n  ...props\n}) => {\n  const isError = touched[field.name] && errors[field.name];\n\n  const onChange = (option) => {\n    setFieldValue(\n      field.name,\n      multi ? option.map((item) => item.value) : option.value\n    );\n  };\n\n  const getValue = () => {\n    if (options) {\n      return multi\n        ? options.filter((option) => field.value.indexOf(option.value) >= 0)\n        : options.find((option) => option.value === field.value);\n    } else {\n      return multi ? [] : \"\";\n    }\n  };\n\n  return (\n    <div\n      className={classNames(\"form-group\", className, {\n        error: touched[field.name] && errors[field.name]\n      })}\n    >\n      {label && (\n        <label className=\"form-label\" htmlFor={field.name}>\n          {label}\n        </label>\n      )}\n      <ReactSelect\n        options={options}\n        isMulti={multi}\n        value={getValue()}\n        onChange={onChange}\n        name={field.name}\n        className={classNames({\n          \"is-invalid\": touched[field.name] && errors[field.name]\n        })}\n        placeholder={placeholder}\n        {...props}\n      />\n      {touched[field.name] && errors[field.name] && (\n        <div className=\"invalid-feedback\">{errors[field.name]}</div>\n      )}\n    </div>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nconst Textarea = ({\n  label,\n  placeholder,\n  className,\n  field,\n  form: { touched, errors },\n  ...props\n}) => (\n  <div\n    className={classNames(\"form-group\", className, {\n      error: touched[field.name] && errors[field.name]\n    })}\n  >\n    {label && (\n      <label className=\"form-label\" htmlFor={field.name}>\n        {label}\n      </label>\n    )}\n    <textarea\n      className={classNames(\"form-control\", {\n        \"is-invalid\": touched[field.name] && errors[field.name]\n      })}\n      placeholder={placeholder}\n      {...field}\n      {...props}\n    />\n    {touched[field.name] && errors[field.name] && (\n      <div className=\"invalid-feedback\">{errors[field.name]}</div>\n    )}\n  </div>\n);\n\nexport default Textarea;\n","import { uploadUrl } from \"../constants\";\n\nexport const uploadImages = (files = []) => {\n  const fd = new FormData();\n  Object.values(files).forEach((file) => {\n    fd.append(\"picture\", file);\n  });\n\n  return fetch(uploadUrl, {\n    body: fd,\n    method: \"post\"\n  });\n};\n","import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport Input from \"components/core/form-controls/Input\";\nimport Select from \"components/core/form-controls/Select\";\nimport Textarea from \"components/core/form-controls/Textarea\"\nimport { getCategories} from 'graphql/category';\nimport {  useMutation, useQuery } from '@apollo/client';\nimport {uploadImages} from 'graphql/upload'\nimport {createProduct} from 'graphql/products'\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\"),\n    price: Yup.string().required(\"Price is required!\"),\n    shippingCharges: Yup.string().required(\"Shipping Charges is required!\"),\n    wholeSalePrice:Yup.string().required(\"Price is required!\"),\n    subCategory: Yup.string().required(\"Sub Category is required!\"),\n    productDescription: Yup.string().required(\"Product Description is required!\"),\n});\n\nconst CreateProduct = () => {\n  const { loading:isLoading, error, data = {} } = useQuery(getCategories);\n  const [submitLogin] = useMutation(createProduct);\n  const{categories = []} = data\n\n  return (\n    <Formik\n  \n      initialValues={{\n        name: \"\",\n        price: \"\",\n        wholeSalePrice:\"\",\n        category: [],\n        subCategory:\"\",\n        shippingCharges:\"\",\n        localShippingCharges:\"\",\n        images:[],\n        productDescription:\"\",\n        file:[],\n        previewFile: \"\"\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n         await submitLogin({ variables:\n            values\n          });\n          resetForm();\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {({values,setFieldValue}) => (\n        <Form   className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Product Name\"\n            component={Input}\n          />\n          <Field\n            name=\"price\"\n            type=\"text\"\n            placeholder=\"Price\"\n            component={Input}\n          />\n            <Field\n            name=\"wholeSalePrice\"\n            type=\"text\"\n            placeholder=\"Whole Sale Price\"\n            component={Input}\n          />\n           <Field\n            name=\"localShippingCharges\"\n            type=\"text\"\n            placeholder=\"Local Shipping Charges\"\n            component={Input}\n          />\n            <Field\n            name=\"shippingCharges\"\n            type=\"text\"\n            placeholder=\"Shipping Charges\"\n            component={Input}\n          />\n          \n          <Field\n            name=\"productDescription\"\n            type=\"text\"\n            placeholder=\"Product Description\"\n            component={Textarea}\n          />\n            <Field\n            name=\"category\"\n            type=\"text\"\n            placeholder=\"Category\"\n            component={Select}\n            options={categories.map(c => ({name:c.name, value: c.subCategories, label:c.name}))}\n          />\n           <Field\n            name=\"subCategory\"\n            type=\"text\"\n            placeholder=\"Sub Category\"\n            component={Select}\n            options={(values.category|| []).map(c => ({name:c.name, value: c.id, label:c.name}))}\n          />\n          Images: \n           <Field\n            name=\"file\"\n            type=\"file\"\n            value={undefined}\n            placeholder=\"Images\"\n            component={Input}\n            multiple\n            accept=\"image/*, video/*\"\n            onChange={(event) => {\n              setFieldValue(\"file\", event.currentTarget.files);\n            }}\n          />\n          Catelog File:\n          <Field\n            name=\"previewFile\"\n            type=\"file\"\n            value={undefined}\n            placeholder=\"Images\"\n            component={Input}\n            onChange={(event) => {\n              setFieldValue(\"previewFile\", event.currentTarget.files);\n            }}\n          />\n           \n           <button disabled={values.file.length === 0 || values.images.length !== 0} className=\"auth-button block\" onClick={async (e) => {\n              e.preventDefault()\n              e.stopPropagation();\n             const result =  await uploadImages(values.file);\n            const {data:{files = [ ]}} = await result.json()\n             setFieldValue(\"images\", files);\n            }}>\n            Upload Image\n          </button>\n          <button disabled={!values.previewFile} className=\"auth-button block\" onClick={async (e) => {\n              e.preventDefault()\n              e.stopPropagation();\n             const result =  await uploadImages(values.previewFile);\n            const {data:{files = [ ]}} = await result.json()\n             setFieldValue(\"previewFile\", files[0]);\n            }}>\n            Upload Preview File\n          </button>\n          <button className=\"auth-button block\" disabled={values.images.length === 0} onClick={() => {}}>\n            Create Product\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateProduct;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport Input from \"components/core/form-controls/Input\";\nimport { updateUser, getUserById } from \"graphql/auth\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { AuthStateContext } from \"contexts/auth\";\n\nconst LoginSchema = Yup.object().shape({\n  phone: Yup.string().required(\"Mobile Number is required!\"),\n  name: Yup.string().required(\"Name is required!\"),\n  companyName: Yup.string().required(\"Company Name is required!\"),\n  address: Yup.string().required(\"Address is required!\")\n});\n\nconst EditProfile = () => {\n  const authState = useContext(AuthStateContext);\n  const history = useHistory();\n  const location = useLocation();\n  const [submitRegister] = useMutation(updateUser);\n\n  const  { loading:userLoading, data: userProfileData  ={} } = useQuery(getUserById, {variables:{\n    id: authState.user.context.userId\n  }});\n\n  if(userLoading){\n    return null;\n  }\n  const fromUrl = _get(location, \"state.from.pathname\");\n\n  const goToLogin = (e) => {\n    e.preventDefault();\n    history.push(\"/\");\n  };\n\n  const registerSuccess = () => {\n    if (fromUrl) {\n      history.push(fromUrl);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        phone: \"\",\n        password: \"\",\n        name: \"\",\n        companyName: \"\",\n        ...userProfileData.user\n      }}\n      validationSchema={LoginSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          const userData = await submitRegister({ variables: values });\n          if (userData) {\n            registerSuccess();\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form className=\"form-container\">\n          <Field\n            name=\"phone\"\n            type=\"text\"\n            placeholder=\"Mobile Number\"\n            component={Input}\n            disabled\n          />\n          <Field name=\"name\" type=\"text\" placeholder=\"Name\" component={Input} />\n          <Field\n            name=\"companyName\"\n            type=\"text\"\n            placeholder=\"Company Name / Shopkeeper Name\"\n            component={Input}\n          />\n          <Field\n            name=\"address\"\n            type=\"text\"\n            placeholder=\"Address\"\n            component={Input}\n          />\n\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Update Profile\n          </button>\n\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default EditProfile;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"contexts/auth\";\nimport Input from \"components/core/form-controls/Input\";\nimport {createCategory} from 'graphql/category';\nimport {  useMutation, useLazyQuery } from '@apollo/client';\nimport {uploadImages} from 'graphql/upload'\n\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\"),\n});\n\nconst CreateCategory = () => {\n  const authDispatch = useContext(AuthDispatchContext);\n  const history = useHistory();\n  const location = useLocation();\n  const [submitCategory] = useMutation(createCategory);\n\n \n  return (\n    <Formik\n    \n      initialValues={{\n        name: \"\",\n        categoryImage:'',\n        file:[]\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          await submitCategory({ variables:\n            values\n          });\n          resetForm();\n          // getContext({ variables:\n          //   {token:userData?.data?.login?.token}\n          // });\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {({isSubmitting,values, setFieldValue}) => (\n        <Form className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Category Name\"\n            component={Input}\n          />\n       \n           <Field\n            name=\"categoryImage\"\n            type=\"file\"\n            placeholder=\"Category Image\"\n            component={Input}\n            value={undefined}\n    \n            accept=\"image/png, image/gif, image/jpeg\"\n            onChange={(event) => {\n              setFieldValue(\"file\", event.currentTarget.files);\n            }}\n           \n          />\n\n            <button disabled={values.file.length === 0 || values.categoryImage} className=\"auth-button block\" onClick={async (e) => {\n              e.preventDefault()\n              e.stopPropagation();\n             const result =  await uploadImages(values.file);\n            const {data:{files = [ ]}} = await result.json()\n             setFieldValue(\"categoryImage\", files[0]);\n            }}>\n            Upload Image\n          </button>\n\n  \n          <button className=\"auth-button block\" disabled={isSubmitting || !values.categoryImage} onClick={() => {}}>\n            Create Category\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateCategory;\n","import { gql } from \"@apollo/client\";\n\nexport const createSubCategory = gql`\n  mutation createSubCategory($name: String!, $category: String!) {\n    createSubCategory(name: $name, category: $category) {\n      id\n      name\n      category\n      categoryDetails {\n        name\n        id\n        categoryImage\n      }\n    }\n  }\n`;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"contexts/auth\";\nimport Input from \"components/core/form-controls/Input\";\nimport Select from \"components/core/form-controls/Select\";\nimport {getCategories} from 'graphql/category';\nimport {createSubCategory} from 'graphql/subCategory'\nimport {  useMutation, useQuery } from '@apollo/client';\n\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\"),\n    category: Yup.string().required(\"Category is required!\"),\n});\n\nconst CreateProduct = () => {\n  const authDispatch = useContext(AuthDispatchContext);\n  const { loading:isLoading, error, data = {} } = useQuery(getCategories);\n  const history = useHistory();\n  const location = useLocation();\n  const [submitLogin] = useMutation(createSubCategory);\n\n const{categories = []} = data\n\n  return (\n    <Formik\n\n      initialValues={{\n        name: \"\",\n       \n        category:\"\"\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          await submitLogin({ variables:\n            values\n          });\n          resetForm();\n          // getContext({ variables:\n          //   {token:userData?.data?.login?.token}\n          // });\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form  className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Sub Category Name\"\n            component={Input}\n          />\n        \n           <Field\n            name=\"category\"\n            type=\"text\"\n            placeholder=\"Category\"\n            component={Select}\n            options={categories.map(c => ({name:c.name, value: c.id, label:c.name}))}\n          />\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Create Sub Category\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateProduct;\n","import Table from \"react-bootstrap/Table\";\nimport { confirmAlert } from 'react-confirm-alert';\n\nfunction ResponsiveTable({ data, onEdit, onDelete, disableActions}) {\n  const keys = data[0];\n  const { __typename, ...restKeys } = keys;\n  const getColumnValue = (item, key) =>{\n  if(!item[key] || typeof item[key] === 'string'){\n    return item[key]\n  } else if(Array.isArray(item[key])){\n    return typeof item[key][0] === 'string'? item[key].join(' , '): item[key].map(item => item.name).join(' , ')\n  } else if(typeof item[key] === 'object'){\n    return item[key].name\n  }\n    \n  }\n  return (\n    <Table responsive=\"sm\">\n      <thead>\n        <tr>\n          {Object.keys(restKeys).map((key, index) => (\n            <th key={key + index}>{key}</th>\n          ))}\n         {!disableActions && <th>Edit</th>}\n         {!disableActions && <th>Delete</th>}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((item, index) => (\n          <tr key={index}>\n            {Object.keys(restKeys).map((key) => (\n              <td key={key + index}>{getColumnValue(item, key)}</td>\n            ))}\n            {!disableActions && <td>\n              {\" \"}\n              {\n                <button\n                  className=\"outline edit-icon\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                     onEdit(item)\n                  }}\n                >\n                  <i className=\"rsc-icon-edit\" />\n                </button>\n              }\n            </td>}\n            {!disableActions && <td>\n              {\" \"}\n              {\n               <button className=\"outline delete-icon\" onClick={async (e) => {\n                e.stopPropagation()\n                confirmAlert({\n                  title: 'Confirm to Delete',\n                  message: 'Are you sure you want to delete?.',\n                  buttons: [\n                    {\n                      label: 'Yes',\n                      onClick: () => (onDelete(item))\n                    },\n                    {\n                      label: 'No',\n                      onClick: () => ({})\n                    }\n                  ]\n                });\n               \n               }}>\n                    <i className=\"rsc-icon-delete\" />\n                  </button>\n              }\n            </td>}\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default ResponsiveTable;\n","import { gql } from \"@apollo/client\";\n\nexport const createPermission = gql`\n  mutation createPermission($name: String!) {\n    createPermission(name: $name) {\n      id\n      name\n    }\n  }\n`;\n\nexport const getPermissionById = gql`\n  query permission($id: ID!) {\n    permission(id: $id) {\n      id\n      name\n    }\n  }\n`;\n\nexport const getPermissions = gql`\n  query permissions {\n    permissions {\n      id\n      name\n    }\n  }\n`;\n\nexport const deletePermission = gql`\n  mutation deletePermission($id: ID!) {\n    deletePermission(id: $id)\n  }\n`;\n\nexport const updatePermission = gql`\n  mutation editPermission($name: String!, $id: ID!) {\n    editPermission(id: $id, name: $name)\n  }\n`;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport Table from \"components/core/Table\"\nimport {  useQuery,useMutation } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  getPermissions,\n  deletePermission\n} from \"graphql/permissions\";\nimport { CommonStateContext } from \"contexts/common\";\n\nconst Permissions = () => {\n  const { searchKeyword } = useContext(CommonStateContext);\n  const history = useHistory();\n  const { loading:isLoading, error, data = {}, refetch } = useQuery(getPermissions);\n  const params = new Proxy(new URLSearchParams(history.location.search), {\n    get: (searchParams, prop) => searchParams.get(prop),\n  });\n  useEffect(()=>{refetch()},[])\n  const [deleteItem] = useMutation(deletePermission);\n  const [previewData, setPreviewData] = useState(null)\n  const [modalActive, setModalActive] = useState(false)\n  const { products} = data ;\n  let productsList =\n    products &&\n    products.filter((product) => {\n      return (\n        product.name.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n        !searchKeyword\n      );\n    });\n\n    if(params.productId){\n      productsList = productsList && productsList.filter(product => product.id === params.productId)\n    }\n\n\n  const onPreview = (data) =>{\n    setPreviewData(data)\n    setModalActive(true)\n  }\n  const closeModal = () => {\n    setModalActive(false);\n  }\n  const handleOnDelete = async (data) =>{\n    await deleteItem({ variables:\n      {id:data.id}\n    })\n    await refetch()\n  }\n  const handleOnEdit = (data) => {\n    history.push(`/editPermission/${data.id}`);\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"products-wrapper\">\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n          <Link to=\"/createPermission\" className=\"btn btn-dark\" style={{width:'200px'}}>\n            Create Permission\n          </Link>\n        <Table onEdit={handleOnEdit} data={data.permissions} onDelete={handleOnDelete}/>\n        \n      </div>\n  );\n};\n\nexport default Permissions;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport Input from \"components/core/form-controls/Input\";\nimport {createPermission} from 'graphql/permissions'\nimport {  useMutation } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\n\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\"),\n});\n\nconst CreateProduct = () => {\n  const [submitLogin] = useMutation(createPermission);\n  const history = useHistory()\n\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          await submitLogin({ variables:\n            values\n          });\n          resetForm();\n          history.push('/permissions')\n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form  className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Permission Name\"\n            component={Input}\n          />\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Create Permission\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateProduct;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport Input from \"components/core/form-controls/Input\";\nimport {updatePermission, getPermissionById} from 'graphql/permissions'\nimport {  useMutation, useQuery } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\"),\n});\n\nconst CreateProduct = ({match}) => {\n  const [submitLogin] = useMutation(updatePermission);\n  const history = useHistory()\n  const  { loading:isLoading, error, data = {} } = useQuery(getPermissionById, {variables:{\n    id: match?.params?.id\n  }});\n  \n  if(isLoading){\n    return null\n  }\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        ...data.permission,\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          await submitLogin({ variables:\n            values\n          });\n          resetForm();\n          history.push('/permissions')\n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form  className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Permission Name\"\n            component={Input}\n          />\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Update Permission\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateProduct;\n","import { gql } from \"@apollo/client\";\n\nexport const createRole = gql`\n  mutation createRole($name: String!, $permissions: [String]) {\n    createRole(name: $name, permissions: $permissions) {\n      id\n      name\n    }\n  }\n`;\n\nexport const getRoles = gql`\n  query roles {\n    roles {\n      id\n      name\n      permissions\n      permissionsDetails {\n        name\n      }\n    }\n  }\n`;\n\nexport const getRoleById = gql`\n  query role($id: ID!) {\n    role(id: $id) {\n      id\n      name\n      permissionsDetails {\n        name\n        id\n      }\n    }\n  }\n`;\n\nexport const deleteRole = gql`\n  mutation deleteRole($id: ID!) {\n    deleteRole(id: $id)\n  }\n`;\n\nexport const updateRole = gql`\n  mutation editRole($name: String!, $permissions: [String], $id: ID!) {\n    editRole(id: $id, name: $name, permissions: $permissions)\n  }\n`;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"contexts/auth\";\nimport Input from \"components/core/form-controls/Input\";\nimport Select from \"components/core/form-controls/Select\";\nimport {getPermissions} from 'graphql/permissions';\nimport {createRole} from 'graphql/roles'\nimport {  useMutation, useQuery } from '@apollo/client';\n\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\")\n});\n\nconst CreateProduct = () => {\n  const authDispatch = useContext(AuthDispatchContext);\n  const { loading:isLoading, error, data = {} } = useQuery(getPermissions);\n  const history = useHistory();\n  const location = useLocation();\n  const [submitLogin] = useMutation(createRole);\n\n const{permissions = []} = data\n\n  return (\n    <Formik\n\n      initialValues={{\n        name: \"\",\n        permissions:\"\"\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          await submitLogin({ variables:\n            values\n          });\n          resetForm();\n          history.push('/roles')\n          // getContext({ variables:\n          //   {token:userData?.data?.login?.token}\n          // });\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form  className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Role Name\"\n            component={Input}\n          />\n        \n           <Field\n            name=\"permissions\"\n            type=\"text\"\n            placeholder=\"Permissions\"\n            component={Select}\n            options={permissions.map(c => ({name:c.name, value: c.id, label:c.name}))}\n            multi\n          />\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Create Role\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateProduct;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"contexts/auth\";\nimport Input from \"components/core/form-controls/Input\";\nimport Select from \"components/core/form-controls/Select\";\nimport {getPermissions} from 'graphql/permissions';\nimport {updateRole,getRoleById} from 'graphql/roles'\nimport {  useMutation, useQuery } from '@apollo/client';\n\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\")\n});\n\nconst CreateProduct = ({match}) => {\n  const authDispatch = useContext(AuthDispatchContext);\n  const { loading:isLoading, error, data = {} } = useQuery(getPermissions);\n\n  const  { loading:roleDataLoading,  data:roleData = {} } = useQuery(getRoleById, {variables:{\n    id: match?.params?.id\n  }});\n\n  const history = useHistory();\n  const location = useLocation();\n  const [submitLogin] = useMutation(updateRole);\n  if(roleDataLoading){\n    return null\n  }\n const{permissions = []} = data\n\n  return (\n    <Formik\n\n      initialValues={{\n        name: \"\",\n        permissions:\"\",\n        ...roleData.role,\n        permissions: roleData.role.permissionsDetails.map(permission => permission.id)\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          await submitLogin({ variables:\n            values\n          });\n          resetForm();\n          history.push('/roles')\n          // getContext({ variables:\n          //   {token:userData?.data?.login?.token}\n          // });\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form  className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Role Name\"\n            component={Input}\n          />\n        \n           <Field\n            name=\"permissions\"\n            type=\"text\"\n            placeholder=\"Permissions\"\n            component={Select}\n            options={permissions.map(c => ({name:c.name, value: c.id, label:c.name}))}\n            multi\n          />\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Update Role\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateProduct;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport Table from \"components/core/Table\"\nimport {  useQuery,useMutation } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  getRoles,\n  deleteRole\n} from \"graphql/roles\";\nimport { CommonStateContext } from \"contexts/common\";\n\nconst Roles = () => {\n  const { searchKeyword } = useContext(CommonStateContext);\n  const history = useHistory();\n  const { loading:isLoading, error, data = {}, refetch } = useQuery(getRoles);\n  const params = new Proxy(new URLSearchParams(history.location.search), {\n    get: (searchParams, prop) => searchParams.get(prop),\n  });\n  useEffect(()=>{refetch()},[])\n  const [deleteItem] = useMutation(deleteRole);\n  const [previewData, setPreviewData] = useState(null)\n  const [modalActive, setModalActive] = useState(false)\n  const { products} = data ;\n  let productsList =\n    products &&\n    products.filter((product) => {\n      return (\n        product.name.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n        !searchKeyword\n      );\n    });\n\n    if(params.productId){\n      productsList = productsList && productsList.filter(product => product.id === params.productId)\n    }\n\n\n  const onPreview = (data) =>{\n    setPreviewData(data)\n    setModalActive(true)\n  }\n  const closeModal = () => {\n    setModalActive(false);\n  }\n  const handleOnDelete = async (data) =>{\n    await deleteItem({ variables:\n      {id:data.id}\n    })\n    await refetch()\n  }\n  const handleOnEdit = (data) => {\n    history.push(`/editRole/${data.id}`);\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"products-wrapper\">\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n          <Link to=\"/createRole\" className=\"btn btn-dark\" style={{width:'200px'}}>\n            Create Role\n          </Link>\n        <Table onEdit={handleOnEdit} data={data.roles} onDelete={handleOnDelete}/>\n        \n      </div>\n  );\n};\n\nexport default Roles;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"contexts/auth\";\nimport Input from \"components/core/form-controls/Input\";\nimport {updateCategory, getCategoryById} from 'graphql/category';\nimport {  useMutation, useQuery } from '@apollo/client';\nimport {uploadImages} from 'graphql/upload'\n\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\"),\n});\n\nconst EditCategory = ({match}) => {\n  const authDispatch = useContext(AuthDispatchContext);\n  const history = useHistory();\n  const location = useLocation();\n  const [submitCategory] = useMutation(updateCategory);\n  const  { loading:isLoading, error, data = {} } = useQuery(getCategoryById, {variables:{\n    id: match?.params?.categoryId\n  }});\n\n  if(isLoading){\n    return null\n  }\n \n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        categoryImage:'',\n        file:[],\n        ...data.category,\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          await submitCategory({ variables:\n            {...values, categoryId:match?.params?.categoryId}\n          });\n          \n          history.push(\"/\");\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {({isSubmitting,values, setFieldValue}) => (\n        <Form className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Category Name\"\n            component={Input}\n          />\n       \n           <Field\n            name=\"categoryImage\"\n            type=\"file\"\n            placeholder=\"Category Image\"\n            component={Input}\n            value={undefined}\n    \n            accept=\"image/png, image/gif, image/jpeg\"\n            onChange={(event) => {\n              setFieldValue(\"file\", event.currentTarget.files);\n            }}\n           \n          />\n\n            <button disabled={values.file.length === 0} className=\"auth-button block\" onClick={async (e) => {\n              e.preventDefault()\n              e.stopPropagation();\n             const result =  await uploadImages(values.file);\n            const {data:{files = [ ]}} = await result.json()\n             setFieldValue(\"categoryImage\", files[0]);\n            }}>\n            Upload Image\n          </button>\n\n  \n          <button className=\"auth-button block\" disabled={isSubmitting || !values.categoryImage} onClick={() => {}}>\n            Update Category\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default EditCategory;\n","import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport Input from \"components/core/form-controls/Input\";\nimport Select from \"components/core/form-controls/Select\";\nimport Textarea from \"components/core/form-controls/Textarea\"\nimport { getCategories} from 'graphql/category';\nimport { useHistory } from \"react-router-dom\";\nimport {  useMutation, useQuery } from '@apollo/client';\nimport {uploadImages} from 'graphql/upload'\nimport {updateProduct, getProductById} from 'graphql/products'\nconst ProductSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\"),\n    price: Yup.string().required(\"Price is required!\"),\n    shippingCharges: Yup.string().required(\"Shipping Charges is required!\"),\n    wholeSalePrice:Yup.string().required(\"Price is required!\"),\n    subCategory: Yup.string().required(\"Sub Category is required!\"),\n    productDescription: Yup.string().required(\"Product Description is required!\"),\n});\n\nconst EditProduct = ({match}) => {\n  const { loading:isLoading, error, data = {} } = useQuery(getCategories);\n  const [submitLogin] = useMutation(updateProduct);\n  const{categories = []} = data\n  const history = useHistory();\n  const  { loading:productLoading, data: productData  ={} } = useQuery(getProductById, {variables:{\n    id: match?.params?.id\n  }});\n  if(productLoading || isLoading){\n    return null\n  }\n  const {product:{subCategoryDetails , ...restProductData}={}} = productData \n\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        price: \"\",\n        wholeSalePrice:\"\",\n        category: \"\",\n        subCategory:\"\",\n        shippingCharges:\"\",\n        localShippingCharges:\"\",\n        images:[],\n        productDescription:\"\",\n        file:[],\n        previewFile: \"\",\n        ...restProductData,\n        category: subCategoryDetails.categoryDetails\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n         await submitLogin({ variables:\n            values,\n             id:match?.params?.id\n          });\n          history.push(`/products/${subCategoryDetails.categoryDetails.id}`);\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {({values,setFieldValue}) => (\n        <Form className=\"form-container\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Product Name\"\n            component={Input}\n          />\n          <Field\n            name=\"price\"\n            type=\"text\"\n            placeholder=\"Price\"\n            component={Input}\n          />\n            <Field\n            name=\"wholeSalePrice\"\n            type=\"text\"\n            placeholder=\"Whole Sale Price\"\n            component={Input}\n          />\n              <Field\n            name=\"localShippingCharges\"\n            type=\"text\"\n            placeholder=\"Local Shipping Charges\"\n            component={Input}\n          />\n            <Field\n            name=\"shippingCharges\"\n            type=\"text\"\n            placeholder=\"Shipping Charges\"\n            component={Input}\n          />\n        \n          <Field\n            name=\"productDescription\"\n            type=\"text\"\n            placeholder=\"Product Description\"\n            component={Textarea}\n          />\n            <Field\n            name=\"category\"\n            type=\"text\"\n            placeholder=\"Category\"\n            component={Select}\n          \n\n            options={categories.map(c => ({name:c.name, value: c, label:c.name}))}\n          />\n           <Field\n            name=\"subCategory\"\n            type=\"text\"\n            placeholder=\"Sub Category\"\n            component={Select}\n            options={(values.category?.subCategories || []).map(c => ({name:c.name, value: c.id, label:c.name}))}\n          />\n             Images: \n           <Field\n            name=\"file\"\n            type=\"file\"\n            value={undefined}\n            placeholder=\"Images\"\n            component={Input}\n            multiple\n            accept=\"image/*, video/*\"\n            onChange={(event) => {\n              setFieldValue(\"file\", event.currentTarget.files);\n            }}\n          />\n             Catelog File:\n          <Field\n            name=\"previewFile\"\n            type=\"file\"\n            value={undefined}\n            placeholder=\"Images\"\n            component={Input}\n            onChange={(event) => {\n              setFieldValue(\"previewFile\", event.currentTarget.files);\n            }}\n          />\n           \n           <button disabled={values.file.length === 0} className=\"auth-button block\" onClick={async (e) => {\n              e.preventDefault()\n              e.stopPropagation();\n             const result =  await uploadImages(values.file);\n            const {data:{files = [ ]}} = await result.json()\n             setFieldValue(\"images\", files);\n            }}>\n            Upload Image\n          </button>\n          <button disabled={!values.previewFile} className=\"auth-button block\" onClick={async (e) => {\n              e.preventDefault()\n              e.stopPropagation();\n             const result =  await uploadImages(values.previewFile);\n            const {data:{files = [ ]}} = await result.json()\n             setFieldValue(\"previewFile\", files[0]);\n            }}>\n            Upload Preview File\n          </button>\n          <button className=\"auth-button block\" disabled={values.images.length === 0} onClick={() => {}}>\n            Update Product\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default EditProduct;\n","import { gql } from \"@apollo/client\";\n\nexport const createUserRole = gql`\n  mutation createRoleMapping($userId: ID!, $roleIds: [String]) {\n    createRoleMapping(roleIds: $roleIds, userId: $userId) {\n      id\n    }\n  }\n`;\n\nexport const getRolesMapping = gql`\n  query rolesMapping {\n    rolesMapping {\n      id\n      userId\n      roleIds\n      userDetails {\n        phone\n        name\n        address\n        companyName\n      }\n      roleDetails {\n        id\n        permissions\n        name\n        permissionsDetails {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const getRoleById = gql`\n  query role($id: ID!) {\n    role(id: $id) {\n      id\n      name\n      permissionsDetails {\n        name\n        id\n      }\n    }\n  }\n`;\n\nexport const deleteRole = gql`\n  mutation deleteRole($id: ID!) {\n    deleteRole(id: $id)\n  }\n`;\n\nexport const updateRole = gql`\n  mutation editRole($name: String!, $permissions: [String], $id: ID!) {\n    editRole(id: $id, name: $name, permissions: $permissions)\n  }\n`;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport Table from \"components/core/Table\"\nimport {  useQuery,useMutation } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  getRolesMapping,\n  deleteRole\n} from \"graphql/rolesMapping\";\nimport { CommonStateContext } from \"contexts/common\";\n\nconst Roles = () => {\n  const { searchKeyword } = useContext(CommonStateContext);\n  const history = useHistory();\n  const { loading:isLoading, error, data = {}, refetch } = useQuery(getRolesMapping);\n  const params = new Proxy(new URLSearchParams(history.location.search), {\n    get: (searchParams, prop) => searchParams.get(prop),\n  });\n  useEffect(()=>{refetch()},[])\n  const [deleteItem] = useMutation(deleteRole);\n  const [previewData, setPreviewData] = useState(null)\n  const [modalActive, setModalActive] = useState(false)\n  const { products} = data ;\n  let productsList =\n    products &&\n    products.filter((product) => {\n      return (\n        product.name.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n        !searchKeyword\n      );\n    });\n\n    if(params.productId){\n      productsList = productsList && productsList.filter(product => product.id === params.productId)\n    }\n\n\n  const onPreview = (data) =>{\n    setPreviewData(data)\n    setModalActive(true)\n  }\n  const closeModal = () => {\n    setModalActive(false);\n  }\n  const handleOnDelete = async (data) =>{\n    // await deleteItem({ variables:\n    //   {id:data.id}\n    // })\n    // await refetch()\n  }\n  const handleOnEdit = (data) => {\n    // history.push(`/editRole/${data.id}`);\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"products-wrapper\">\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n  return (\n    <div  className=\"container\">\n          <Link to=\"/createUserRole\" className=\"btn btn-dark\" style={{width:'200px'}}>\n            Create User Role\n          </Link>\n        <Table disableActions onEdit={handleOnEdit} data={data.rolesMapping.map(rm=> ({...rm,...rm.userDetails}))} onDelete={handleOnDelete}/>\n        \n      </div>\n  );\n};\n\nexport default Roles;\n","import React, { useContext, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"contexts/auth\";\nimport Input from \"components/core/form-controls/Input\";\nimport Select from \"components/core/form-controls/Select\";\nimport {createUserRole} from 'graphql/rolesMapping'\nimport {  useMutation, useQuery } from '@apollo/client';\nimport {getRoles} from \"graphql/roles\"\nimport {getUsers} from \"graphql/auth\"\n\nconst ProductSchema = Yup.object().shape({\n});\n\nconst CreateProduct = () => {\n  const authDispatch = useContext(AuthDispatchContext);\n  const { loading:isLoading, error, data = {} } = useQuery(getRoles);\n  const { loading:userLoading,  data:userData = {} } = useQuery(getUsers);\n  const history = useHistory();\n  const location = useLocation();\n  const [submitLogin] = useMutation(createUserRole);\n  if(userLoading, isLoading){\n    return null\n  }\n const{roles = []} = data\n const{users = []} = userData\n\n  return (\n    <Formik\n\n      initialValues={{\n        userId: \"\",\n        roleIds:\"\"\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          await submitLogin({ variables:\n            values\n          });\n          resetForm();\n          history.push('/userRoles')\n          // getContext({ variables:\n          //   {token:userData?.data?.login?.token}\n          // });\n         \n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form  className=\"form-container\">\n         <Field\n            name=\"userId\"\n            type=\"text\"\n            placeholder=\"User\"\n            component={Select}\n            options={users.map(c => ({name:c.name, value: c.id, label:`${c.name} - ${c.phone}`}))}\n          />\n        \n           <Field\n            name=\"roleIds\"\n            type=\"text\"\n            placeholder=\"Roles\"\n            component={Select}\n            options={roles.map(c => ({name:c.name, value: c.id, label:c.name}))}\n            multi\n          />\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Create User Role\n          </button>\n\n        \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateProduct;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport AuthProvider from \"contexts/auth\";\nimport CommonProvider from \"contexts/common\";\nimport ProductsProvider from \"contexts/products\";\nimport CartProvider from \"contexts/cart\";\nimport CheckoutProvider from \"contexts/checkout\";\nimport RouteWrapper from \"layouts/RouteWrapper\";\nimport AuthLayout from \"layouts/AuthLayout\";\nimport CommonLayout from \"layouts/CommonLayout\";\nimport AuthPage from \"pages/auth\";\nimport HomePage from \"pages/home\";\nimport ProductPage from \"pages/products\";\nimport RegisterPage from \"pages/register\";\nimport CheckoutPage from \"pages/checkout\";\nimport CreateProductPage from \"pages/createproduct\";\nimport EditProfilePage from \"pages/editProfile\";\nimport CategoryPage from \"pages/createCategory\";\nimport SubCategoryPage from \"pages/createSubCategory\";\nimport PermissionPage from \"pages/permissions\";\nimport CreatePermissionPage from \"pages/createPermission\";\nimport EditPermissionPage from \"pages/editPermission\";\nimport CreateRolePage from \"pages/createRole\";\nimport EditRolePage from \"pages/editRole\";\nimport RolePage from \"pages/roles\";\nimport EditCategoryPage from \"pages/editcategory\";\nimport EditProductPage from \"pages/editproduct\";\nimport UserRolePage from \"pages/userRoles\";\nimport CreateUserRolePage from \"pages/createUserRole\";\nimport { endpoint } from \"./constants\";\nimport \"assets/scss/style.scss\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { Permissions } from \"./constants/common\";\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: endpoint\n});\n\nexport const navConfig = [\n  {\n    id: \"home\",\n    title: \"Home\",\n    path: \"/\",\n    exact: true,\n    component: HomePage,\n    layout: CommonLayout,\n    showNav: true\n  },\n  {\n    id: \"checkout\",\n    path: \"/checkout\",\n    component: CheckoutPage,\n    layout: CommonLayout,\n    showNav: false\n  },\n  {\n    id: \"auth\",\n    path: \"/auth\",\n    component: AuthPage,\n    layout: AuthLayout,\n    showNav: false\n  },\n  {\n    id: \"register\",\n    path: \"/register\",\n    component: RegisterPage,\n    layout: AuthLayout,\n    showNav: false\n  },\n  {\n    id: \"createProduct\",\n    title: \"Create Product\",\n    path: \"/createProduct\",\n    component: CreateProductPage,\n    layout: CommonLayout,\n    permissions: [Permissions.CREATE_PRODUCT],\n    showNav: true,\n    isPrivate: true\n  },\n  {\n    id: \"createCategory\",\n    title: \"Create Category\",\n    path: \"/createCategory\",\n    component: CategoryPage,\n    layout: CommonLayout,\n    permissions: [Permissions.CREATE_CATEGORY],\n    showNav: true,\n    isPrivate: true\n  },\n  {\n    id: \"createSubCategory\",\n    title: \"Create Sub Category\",\n    path: \"/createSubCategory\",\n    component: SubCategoryPage,\n    layout: CommonLayout,\n    permissions: [Permissions.CREATE_CATEGORY],\n    showNav: true,\n    isPrivate: true\n  },\n  {\n    id: \"productByCategory\",\n    path: \"/products/:categoryId\",\n    component: ProductPage,\n    layout: CommonLayout,\n    showNav: false\n  },\n  {\n    id: \"categoryById\",\n    path: \"/categories/:categoryId\",\n    component: EditCategoryPage,\n    layout: CommonLayout,\n    showNav: false,\n    isPrivate: true,\n    permissions: [Permissions.CREATE_CATEGORY]\n  },\n  {\n    id: \"editProduct\",\n    path: \"/editProduct/:id\",\n    component: EditProductPage,\n    layout: CommonLayout,\n    showNav: false,\n    isPrivate: true,\n    permissions: [Permissions.CREATE_PRODUCT]\n  },\n  {\n    id: \"createRole\",\n    title: \"Create Role\",\n    path: \"/createRole\",\n    component: CreateRolePage,\n    layout: CommonLayout,\n    showNav: false,\n    isPrivate: true,\n    permissions: [Permissions.CREATE_ROLE]\n  },\n  {\n    id: \"roles\",\n    title: \"Roles\",\n    path: \"/roles\",\n    component: RolePage,\n    layout: CommonLayout,\n    showNav: true,\n    isPrivate: true,\n    permissions: [Permissions.CREATE_ROLE]\n  },\n  {\n    id: \"editRole\",\n    path: \"/editRole/:id\",\n    component: EditRolePage,\n    layout: CommonLayout,\n    showNav: false,\n    isPrivate: true,\n    permissions: [Permissions.CREATE_ROLE]\n  },\n  {\n    id: \"permissions\",\n    title: \"Permissions\",\n    path: \"/permissions\",\n    component: PermissionPage,\n    layout: CommonLayout,\n    showNav: true,\n    isPrivate: true,\n    permissions: [Permissions.CREATE_PERMISSION]\n  },\n  {\n    id: \"createPermission\",\n    title: \"Create Permission\",\n    path: \"/createPermission\",\n    component: CreatePermissionPage,\n    layout: CommonLayout,\n    permissions: [Permissions.CREATE_PERMISSION],\n    showNav: false,\n    isPrivate: true\n  },\n  {\n    id: \"editPermission\",\n    path: \"/editPermission/:id\",\n    component: EditPermissionPage,\n    permissions: [Permissions.CREATE_PERMISSION],\n    layout: CommonLayout,\n    showNav: false,\n    isPrivate: true\n  },\n  {\n    id: \"userRoles\",\n    title: \"User Roles\",\n    path: \"/userRoles\",\n    component: UserRolePage,\n    layout: CommonLayout,\n    showNav: true,\n    isPrivate: true,\n    permissions: [Permissions.CREATE_USER_ROLE]\n  },\n  {\n    id: \"createUserRole\",\n    title: \"Create User Role\",\n    path: \"/createUserRole\",\n    component: CreateUserRolePage,\n    layout: CommonLayout,\n    showNav: false,\n    isPrivate: true,\n    permissions: [Permissions.CREATE_USER_ROLE]\n  },\n  {\n    id: \"editProfile\",\n    title: \"Edit Profile\",\n    path: \"/editProfile\",\n    component: EditProfilePage,\n    layout: CommonLayout,\n    showNav: false,\n    isPrivate: true\n  }\n];\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <AuthProvider>\n        <CommonProvider>\n          <ProductsProvider>\n            <CartProvider>\n              <CheckoutProvider>\n                <Router>\n                  <Switch>\n                    {navConfig.map((nav) => (\n                      <RouteWrapper\n                        key={nav.id}\n                        path={nav.path}\n                        exact={!!nav.exact}\n                        component={nav.component}\n                        layout={nav.layout}\n                        isPrivate={!!nav.isPrivate}\n                        permissions={nav.permissions}\n                      />\n                    ))}\n                  </Switch>\n                </Router>\n              </CheckoutProvider>\n            </CartProvider>\n          </ProductsProvider>\n        </CommonProvider>\n      </AuthProvider>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}